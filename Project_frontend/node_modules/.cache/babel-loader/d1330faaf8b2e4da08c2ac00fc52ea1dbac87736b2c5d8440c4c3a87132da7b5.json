{"ast":null,"code":"import { jwtDecode } from 'jwt-decode';\nimport { updateBugStatus, deleteBug } from '../servicesfile/service';\nimport DataTable from 'primevue/datatable';\nimport Column from 'primevue/column';\nexport default {\n  name: \"BugDetails\",\n  components: {\n    DataTable,\n    Column\n  },\n  props: {\n    bugs: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      activeDropdown: null,\n      userType: ''\n    };\n  },\n  methods: {\n    toggleDropdown(index) {\n      this.activeDropdown = this.activeDropdown === index ? null : index;\n    },\n    async changeStatus(bug, status) {\n      console.log(bug);\n      console.log(bug.id);\n      console.log('asmkdaskdksm');\n      console.log(bug.bug_type);\n      const success = await updateBugStatus(bug.id, status);\n      console.log(bug.bug_type);\n      if (success) {\n        console.log(`Bug ${bug.id} status changed to ${status}.`);\n        this.$emit('update-bugs');\n      }\n      this.activeDropdown = null;\n    },\n    async deleteBug(bug) {\n      const success = await deleteBug(bug.id);\n      if (success) {\n        console.log(`Bug ${bug.id} marked as deleted.`);\n        this.$emit('update-bugs');\n      }\n      this.activeDropdown = null;\n    }\n  },\n  mounted() {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        console.log(\"decoded\");\n        this.userType = decoded.user_type;\n      } catch (error) {\n        console.error('Error decoding token:', error);\n      }\n    }\n    console.log(this.bugs);\n  }\n};","map":{"version":3,"names":["jwtDecode","updateBugStatus","deleteBug","DataTable","Column","name","components","props","bugs","type","Array","required","data","activeDropdown","userType","methods","toggleDropdown","index","changeStatus","bug","status","console","log","id","bug_type","success","$emit","mounted","token","localStorage","getItem","decoded","user_type","error"],"sources":["/home/ali/BugTrackerProject/BugTrackerProject2/BugTrackingProjectBackend/Frontend/bugtrackingfrontend/src/components/BugDetails.vue"],"sourcesContent":["<template>\n  <div class=\"bug-details\">\n    <div v-if=\"bugs.length\">\n      <DataTable :value=\"bugs\" tableStyle=\"min-width: 50rem\" class=\"p-datatable-header-color\">\n        <Column field=\"description\" header=\"Details\" />\n        <Column field=\"bug_type\" header=\"Status\" />\n        <Column field=\"due_date\" header=\"Due Date\" />\n        <Column field=\"assigneduser\" header=\"Assigned To\" />\n        <Column header=\"Action\">\n          <template #body=\"{ data, index }\">\n            <div class=\"action-item\">\n              <i class=\"fas fa-ellipsis-v action-icon\" @click=\"toggleDropdown(index)\"></i>\n              <div v-if=\"activeDropdown === index && userType !== 'developer'\" class=\"dropdown-menu\">\n                <ul>\n                  <li @click=\"changeStatus(data, 'pending')\">Pending</li>\n                  <li @click=\"changeStatus(data, 'inprogress')\">In Progress</li>\n                  <li @click=\"changeStatus(data, 'closed')\">Closed</li>\n                  <li @click=\"deleteBug(data)\">Delete</li>\n                </ul>\n              </div>\n            </div>\n          </template>\n        </Column>\n      </DataTable>\n    </div>\n    <div v-else class=\"no-bugs-message\">\n      No bugs available for this project.\n    </div>\n  </div>\n</template>\n\n<script>\nimport {jwtDecode} from 'jwt-decode';\nimport { updateBugStatus, deleteBug } from '../servicesfile/service'; \nimport DataTable from 'primevue/datatable';\nimport Column from 'primevue/column';\n\nexport default {\n  name: \"BugDetails\",\n  components: {\n    DataTable,\n    Column\n  },\n  props: {\n    bugs: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      activeDropdown: null,\n      userType: ''\n    };\n  },\n  methods: {\n    toggleDropdown(index) {\n      this.activeDropdown = this.activeDropdown === index ? null : index;\n    },\n    async changeStatus(bug, status) {\n      console.log(bug)\n      console.log(bug.id)\n      console.log('asmkdaskdksm')\n      console.log(bug.bug_type)\n      const success = await updateBugStatus(bug.id, status);\n      console.log(bug.bug_type)\n      if (success) {\n        console.log(`Bug ${bug.id} status changed to ${status}.`);\n        this.$emit('update-bugs'); \n      }\n      this.activeDropdown = null;\n    },\n    async deleteBug(bug) {\n      const success = await deleteBug(bug.id);\n      if (success) {\n        console.log(`Bug ${bug.id} marked as deleted.`);\n        this.$emit('update-bugs'); \n      }\n      this.activeDropdown = null;\n    }\n  },\n  mounted() {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        console.log(\"decoded\")\n        this.userType = decoded.user_type;\n      } catch (error) {\n        console.error('Error decoding token:', error);\n      }\n    }\n    console.log(this.bugs);\n  }\n}\n</script>\n<style scoped>\n\n.bug-details {\n  font-family: Arial, sans-serif;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px;\n}\n\n.action-item {\n  position: relative; \n}\n\n.action-icon {\n  cursor: pointer;\n  font-size: 18px;\n  color: #333;\n}\n\n.dropdown-menu {\n  position: absolute;\n  top: 20px;\n  right: 0;\n  background-color: white;\n  border: 1px solid #ccc;\n   z-index: 1000;\n  width: 150px;\n}\n\n.dropdown-menu ul {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.dropdown-menu li {\n  padding: 10px;\n  cursor: pointer;\n  border-bottom: 1px solid #ddd;\n}\n\n.dropdown-menu li:last-child {\n  border-bottom: none;\n}\n\n.dropdown-menu li:nth-child(1) {\n  color: red; \n}\n\n.dropdown-menu li:nth-child(2) {\n  color: blue;\n}\n\n.dropdown-menu li:nth-child(3) {\n  color: green; \n}\n\n.dropdown-menu li:nth-child(4) {\n  color: red; \n}\n\n.dropdown-menu li:hover {\n  background-color: #f5f5f5;\n}\n\n.no-bugs-message {\n  font-style: italic;\n  color: #888;\n}\n</style>\n"],"mappings":"AAgCA,SAAQA,SAAS,QAAO,YAAY;AACpC,SAASC,eAAe,EAAEC,SAAQ,QAAS,yBAAyB;AACpE,OAAOC,SAAQ,MAAO,oBAAoB;AAC1C,OAAOC,MAAK,MAAO,iBAAiB;AAEpC,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE;IACVH,SAAS;IACTC;EACF,CAAC;EACDG,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,IAAI;MACpBC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAACC,KAAK,EAAE;MACpB,IAAI,CAACJ,cAAa,GAAI,IAAI,CAACA,cAAa,KAAMI,KAAI,GAAI,IAAG,GAAIA,KAAK;IACpE,CAAC;IACD,MAAMC,YAAYA,CAACC,GAAG,EAAEC,MAAM,EAAE;MAC9BC,OAAO,CAACC,GAAG,CAACH,GAAG;MACfE,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,EAAE;MAClBF,OAAO,CAACC,GAAG,CAAC,cAAc;MAC1BD,OAAO,CAACC,GAAG,CAACH,GAAG,CAACK,QAAQ;MACxB,MAAMC,OAAM,GAAI,MAAMxB,eAAe,CAACkB,GAAG,CAACI,EAAE,EAAEH,MAAM,CAAC;MACrDC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACK,QAAQ;MACxB,IAAIC,OAAO,EAAE;QACXJ,OAAO,CAACC,GAAG,CAAC,OAAOH,GAAG,CAACI,EAAE,sBAAsBH,MAAM,GAAG,CAAC;QACzD,IAAI,CAACM,KAAK,CAAC,aAAa,CAAC;MAC3B;MACA,IAAI,CAACb,cAAa,GAAI,IAAI;IAC5B,CAAC;IACD,MAAMX,SAASA,CAACiB,GAAG,EAAE;MACnB,MAAMM,OAAM,GAAI,MAAMvB,SAAS,CAACiB,GAAG,CAACI,EAAE,CAAC;MACvC,IAAIE,OAAO,EAAE;QACXJ,OAAO,CAACC,GAAG,CAAC,OAAOH,GAAG,CAACI,EAAE,qBAAqB,CAAC;QAC/C,IAAI,CAACG,KAAK,CAAC,aAAa,CAAC;MAC3B;MACA,IAAI,CAACb,cAAa,GAAI,IAAI;IAC5B;EACF,CAAC;EACDc,OAAOA,CAAA,EAAG;IACR,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,IAAIF,KAAK,EAAE;MACT,IAAI;QACF,MAAMG,OAAM,GAAI/B,SAAS,CAAC4B,KAAK,CAAC;QAChCP,OAAO,CAACC,GAAG,CAAC,SAAS;QACrB,IAAI,CAACR,QAAO,GAAIiB,OAAO,CAACC,SAAS;MACnC,EAAE,OAAOC,KAAK,EAAE;QACdZ,OAAO,CAACY,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF;IACAZ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,IAAI,CAAC;EACxB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}