{"ast":null,"code":"import axios from 'axios';\nimport FileUpload from 'primevue/fileupload';\nimport Button from 'primevue/button';\nexport default {\n  name: 'PopUpNewTask',\n  props: {\n    isVisible: {\n      type: Boolean,\n      required: true\n    }\n  },\n  components: {\n    FileUpload,\n    Button\n  },\n  data() {\n    return {\n      developers: [],\n      selectedDeveloper: null,\n      dueDate: '',\n      title: '',\n      bugDetails: '',\n      file: null,\n      bug_screenshot_type: '',\n      bug_project_id: '1',\n      bug_user_id: '',\n      bug_type: 'inprogress'\n    };\n  },\n  methods: {\n    closeModal() {\n      this.$emit('update:isVisible', false);\n    },\n    async fetchDevelopers() {\n      try {\n        const response = await axios.get('http://localhost:8000/BugUsers/developers/');\n        this.developers = response.data;\n      } catch (error) {\n        console.error('Error fetching developers:', error);\n      }\n    },\n    onDeveloperChange() {\n      console.log('Selected developer ID:', this.selectedDeveloper);\n    },\n    onSelect(event) {\n      this.file = event.files[0];\n      if (this.file) {\n        const mimeType = this.file.type;\n        this.bug_screenshot_type = mimeType.split('/')[1];\n        console.log('File selected:', this.file.name);\n        console.log('File type:', this.bug_screenshot_type);\n      }\n    },\n    remove() {\n      this.file = null;\n      this.$refs.fileupload.clear();\n      console.log(\"File removed\");\n    },\n    async submitForm() {\n      try {\n        const formData = new FormData();\n        formData.append('bug_title', this.title);\n        formData.append('bug_description', this.bugDetails);\n        formData.append('bug_screenshot_type', this.bug_screenshot_type);\n        formData.append('bug_type', this.bug_type);\n        formData.append('bug_project_id', this.bug_project_id);\n        formData.append('bug_user_id', this.selectedDeveloper);\n        if (this.file) {\n          formData.append('file', this.file);\n        }\n        const response = await axios.post('http://localhost:8000/Bugs/create/', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log('Form submitted successfully:', response.data);\n        this.closeModal();\n      } catch (error) {\n        console.error('Error submitting form:', error);\n      }\n    }\n  },\n  watch: {\n    isVisible(newVal) {\n      if (newVal) {\n        this.fetchDevelopers();\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","FileUpload","Button","name","props","isVisible","type","Boolean","required","components","data","developers","selectedDeveloper","dueDate","title","bugDetails","file","bug_screenshot_type","bug_project_id","bug_user_id","bug_type","methods","closeModal","$emit","fetchDevelopers","response","get","error","console","onDeveloperChange","log","onSelect","event","files","mimeType","split","remove","$refs","fileupload","clear","submitForm","formData","FormData","append","post","headers","watch","newVal"],"sources":["/home/ali/BugTrackerProject/Frontend/bugtrackingfrontend/src/components/PopUpNewTask.vue"],"sourcesContent":["<template>\n    <div class=\"modal\" v-if=\"isVisible\" @click.self=\"closeModal\">\n      <div class=\"modal-content\">\n        <span class=\"close\" @click=\"closeModal\">&times;</span>\n        <div class=\"topheadergray\">\n          <div class=\"header-content\">\n            <h2>Add new bug</h2>\n            <i class=\"fas fa-ellipsis-h\"></i>\n          </div>\n        </div>\n        <hr>\n        <div class=\"form-container\">\n          <div class=\"assign-container\">\n            <p class=\"assign-text\">Assign to</p>\n            <div class=\"dropdown\">\n              <select v-model=\"selectedDeveloper\" @change=\"onDeveloperChange\">\n                <option value=\"\" disabled>Select Developer</option>\n                <option v-for=\"developer in developers\" :key=\"developer.id\" :value=\"developer.id\">\n                  {{ developer.user_name }}\n                </option>\n              </select>\n            </div>\n          </div>\n          <div class=\"due-date-container\">\n            <p class=\"due-date-text\">Add Due Date</p>\n            <input type=\"date\" v-model=\"dueDate\" />\n          </div>\n          <div class=\"title-container\">\n            <input type=\"text\" v-model=\"title\" placeholder=\"Add title here\" />\n          </div>\n          <div class=\"bug-details-container\">\n            <h4>Bug Details</h4>\n            <input type=\"text\" v-model=\"bugDetails\" placeholder=\"Enter details here\" />\n          </div>\n          <div class=\"file-upload-container\">\n            <FileUpload ref=\"fileupload\" mode=\"basic\" name=\"file\" url=\"/api/upload\" accept=\"image/png, image/gif\" :maxFileSize=\"1000000\" @select=\"onSelect\" />\n            <div class=\"file-upload-container2\">\n              <Button label=\"Remove\" @click=\"remove\" severity=\"secondary\" />\n            </div>\n          </div>\n        </div>\n        <div class=\"submit-container\">\n          <Button label=\"Submit\" @click=\"submitForm\" />\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  import FileUpload from 'primevue/fileupload';\n  import Button from 'primevue/button';\n  \n  export default {\n    name: 'PopUpNewTask',\n    props: {\n      isVisible: {\n        type: Boolean,\n        required: true\n      }\n    },\n    components: {\n      FileUpload,\n      Button\n    },\n    data() {\n      return {\n        developers: [],\n        selectedDeveloper: null,\n        dueDate: '',\n        title: '',\n        bugDetails: '',\n        file: null,\n        bug_screenshot_type: '',\n        bug_project_id: '1',\n        bug_user_id: '',\n        bug_type: 'inprogress'\n      };\n    },\n    methods: {\n      closeModal() {\n        this.$emit('update:isVisible', false);\n      },\n      async fetchDevelopers() {\n        try {\n          const response = await axios.get('http://localhost:8000/BugUsers/developers/');\n          this.developers = response.data;\n        } catch (error) {\n          console.error('Error fetching developers:', error);\n        }\n      },\n      onDeveloperChange() {\n        console.log('Selected developer ID:', this.selectedDeveloper);\n      },\n      onSelect(event) {\n        this.file = event.files[0];\n        if (this.file) {\n          const mimeType = this.file.type;\n          this.bug_screenshot_type = mimeType.split('/')[1];\n          console.log('File selected:', this.file.name);\n          console.log('File type:', this.bug_screenshot_type);\n        }\n      },\n      remove() {\n        this.file = null;\n        this.$refs.fileupload.clear();\n        console.log(\"File removed\");\n      },\n      async submitForm() {\n        try {\n          const formData = new FormData();\n          formData.append('bug_title', this.title);\n          formData.append('bug_description', this.bugDetails);\n          formData.append('bug_screenshot_type', this.bug_screenshot_type);\n          formData.append('bug_type', this.bug_type);\n          formData.append('bug_project_id', this.bug_project_id);\n          formData.append('bug_user_id', this.selectedDeveloper);\n          if (this.file) {\n            formData.append('file', this.file);\n          }\n  \n          const response = await axios.post('http://localhost:8000/Bugs/create/', formData, {\n            headers: { 'Content-Type': 'multipart/form-data' }\n          });\n          console.log('Form submitted successfully:', response.data);\n          this.closeModal();\n  \n        } catch (error) {\n          console.error('Error submitting form:', error);\n        }\n      }\n    },\n    watch: {\n      isVisible(newVal) {\n        if (newVal) {\n          this.fetchDevelopers();\n        }\n      }\n    }\n  };\n  </script>  \n  <style scoped>\n  .submit-container {\n    margin-top: 20px;\n    display: flex;\n    justify-content: center;\n  }\n  .file-upload-container2 {\n    margin-top: 20px;\n    display: flex;\n    justify-content: center;\n    gap: 10px;\n  }\n  \n  .modal {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: rgba(0, 0, 0, 0.5);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  \n  .modal-content {\n    background-color: white;\n    padding: 20px;\n    border-radius: 5px;\n    width: 50%;\n    max-width: 600px;\n    position: relative;\n  }\n  \n  .close {\n    border: 2px solid black;\n    background-color: black;\n    color: white;\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    font-size: 30px;\n    cursor: pointer;\n  }\n  \n  .topheadergray {\n    margin-top: 20px;\n    border-radius: 5px 5px 0 0;\n    margin-bottom: 10px;\n    position: relative;\n  }\n  \n  .header-content {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  \n  .header-content i {\n    font-size: 20px;\n    color: gray;\n  }\n  \n  hr {\n    border: 0;\n    height: 1px;\n    background: gray;\n    width: 100%;\n  }\n  \n  .form-container {\n    margin-top: 10px;\n  }\n  \n  .assign-container {\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n  }\n  \n  .assign-text {\n    margin-right: 10px;\n  }\n  \n  .dropdown select {\n    padding: 5px;\n    border-radius: 5px;\n    border: 1px solid #ddd;\n    font-size: 14px;\n    width: 150px;\n  }\n  \n  .due-date-container {\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n  }\n  \n  .due-date-text {\n    margin-right: 10px;\n  }\n  \n  input[type=\"date\"] {\n    padding: 5px;\n    border-radius: 5px;\n    border: 1px solid #ddd;\n    font-size: 14px;\n  }\n  \n  .title-container {\n    display: flex;\n    align-items: center;\n  }\n  \n  input[type=\"text\"] {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid #ddd;\n    font-size: 16px;\n    width: 100%;\n    box-sizing: border-box;\n  }\n  \n  .bug-details-container {\n    margin-top: 20px;\n  }\n  \n  .bug-details-container h4 {\n    margin-bottom: 10px;\n    font-size: 18px;\n  }\n  \n  .bug-details-container input[type=\"text\"] {\n    padding: 10px;\n    border-radius: 5px;\n    border: 1px solid #ddd;\n    font-size: 16px;\n    width: 100%;\n    box-sizing: border-box;\n  }\n  .file-upload-container{\n    margin-top: 20px;\n  }\n  </style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}