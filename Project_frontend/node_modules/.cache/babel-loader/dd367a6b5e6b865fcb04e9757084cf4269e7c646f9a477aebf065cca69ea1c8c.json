{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"SingleBug\",\n  props: {\n    project_id: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      bugDescription: null,\n      bugStatus: null,\n      dueDate: null,\n      assignedTo: null,\n      loading: true,\n      error: null\n    };\n  },\n  mounted() {\n    this.fetchBugData();\n  },\n  methods: {\n    async fetchBugData() {\n      this.loading = true;\n      this.error = null;\n      try {\n        const response = await axios.get('http://localhost:8000/Bugs/searchbugbyproject/', {\n          params: {\n            bug_project_id: this.project_id\n          }\n        });\n        console.log('API Response:', response.data);\n        if (response.data.length > 0) {\n          const bug = response.data[0];\n          this.bugDescription = bug.bug_description || 'No details available';\n          this.bugStatus = bug.bug_type || 'No status available'; // Ensure the correct field is used\n          this.dueDate = bug.bug_due_date || 'No due date available';\n          this.assignedTo = bug.assigned_to || 'No assignee available';\n        } else {\n          this.bugDescription = 'No details available';\n          this.bugStatus = 'No status available';\n          this.dueDate = 'No due date available';\n          this.assignedTo = 'No assignee available';\n        }\n      } catch (error) {\n        console.error('Error fetching bug data:', error);\n        this.error = 'Failed to fetch bug data. Please try again later.';\n      } finally {\n        this.loading = false;\n      }\n    },\n    performAction() {\n      console.log('Performing action');\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","project_id","type","String","required","data","bugDescription","bugStatus","dueDate","assignedTo","loading","error","mounted","fetchBugData","methods","response","get","params","bug_project_id","console","log","length","bug","bug_description","bug_type","bug_due_date","assigned_to","performAction"],"sources":["/home/ali/BugTrackerProject/Frontend/bugtrackingfrontend/src/components/SingleBug.vue"],"sourcesContent":["<template>\n    <div class=\"bug-details\">\n      <div v-if=\"loading\">Loading...</div>\n      <div v-if=\"error\" class=\"error\">Error: {{ error }}</div>\n      <div v-if=\"!loading && !error\" class=\"detail-item\">\n        <div class=\"label-container\">\n          <div class=\"empty-box\"></div>\n          <strong>Details:</strong>\n        </div>\n        <div class=\"details-content\">\n          <p>{{ bugDescription || 'No details available' }}</p>\n        </div>\n      </div>\n      <div v-if=\"!loading && !error\" class=\"detail-item\">\n        <strong>Status:</strong>\n        <div class=\"details-content\">\n          <p>{{ bugStatus || 'No status available' }}</p>\n        </div>\n      </div>\n      <div v-if=\"!loading && !error\" class=\"detail-item\">\n        <strong>Due Date:</strong>\n        <div class=\"details-content\">\n          <p>{{ dueDate || 'No due date available' }}</p>\n        </div>\n      </div>\n      <div v-if=\"!loading && !error\" class=\"detail-item\">\n        <strong>Assigned To:</strong>\n        <div class=\"details-content\">\n          <p>{{ assignedTo || 'No assignee available' }}</p>\n        </div>\n      </div>\n      <div v-if=\"!loading && !error\" class=\"detail-item\">\n        <strong>Action:</strong>\n        <div class=\"details-content\">\n          <button @click=\"performAction\">Perform Action</button>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    name: \"SingleBug\",\n    props: {\n      project_id: {\n        type: String,\n        required: true\n      }\n    },\n    data() {\n      return {\n        bugDescription: null,\n        bugStatus: null,\n        dueDate: null,\n        assignedTo: null,\n        loading: true,\n        error: null\n      };\n    },\n    mounted() {\n      this.fetchBugData();\n    },\n    methods: {\n      async fetchBugData() {\n        this.loading = true;\n        this.error = null;\n        try {\n          const response = await axios.get('http://localhost:8000/Bugs/searchbugbyproject/', {\n            params: {\n              bug_project_id: this.project_id\n            }\n          });\n          console.log('API Response:', response.data);\n  \n          if (response.data.length > 0) {\n            const bug = response.data[0];\n            this.bugDescription = bug.bug_description || 'No details available';\n            this.bugStatus = bug.bug_type || 'No status available'; // Ensure the correct field is used\n            this.dueDate = bug.bug_due_date || 'No due date available';\n            this.assignedTo = bug.assigned_to || 'No assignee available';\n          } else {\n            this.bugDescription = 'No details available';\n            this.bugStatus = 'No status available';\n            this.dueDate = 'No due date available';\n            this.assignedTo = 'No assignee available';\n          }\n        } catch (error) {\n          console.error('Error fetching bug data:', error);\n          this.error = 'Failed to fetch bug data. Please try again later.';\n        } finally {\n          this.loading = false;\n        }\n      },\n      performAction() {\n        console.log('Performing action');\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .bug-details {\n    font-family: Arial, sans-serif;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0px; /* Adjust spacing between items as needed */\n    padding-left: 20px; /* Adds 20px padding to the left */\n  }\n  \n  .detail-item {\n    flex: 1 1 auto; /* Allows items to grow and shrink as needed */\n    min-width: 200px; /* Ensures a minimum width for each item */\n    box-sizing: border-box; /* Ensures padding and border are included in the item's width and height */\n  }\n  \n  .label-container {\n    display: flex;\n    align-items: center;\n  }\n  \n  .empty-box {\n    width: 20px; /* Adjust the size of the box as needed */\n    height: 20px; /* Adjust the size of the box as needed */\n    background-color: transparent; /* Transparent background */\n    border: 1px solid #ddd; /* Border around the empty box */\n    margin-right: 10px; /* Space between label and empty box */\n  }\n  \n  .details-content {\n    margin-top: 5px;\n  }\n  \n  .detail-item strong {\n    display: inline-block;\n    width: 120px; /* Adjust the width as needed */\n    font-weight: bold;\n  }\n  \n  .error {\n    color: red;\n  }\n  </style>\n  "],"mappings":"AAyCE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,IAAI;MACpBC,SAAS,EAAE,IAAI;MACfC,OAAO,EAAE,IAAI;MACbC,UAAU,EAAE,IAAI;MAChBC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,YAAY,CAAC,CAAC;EACrB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,YAAYA,CAAA,EAAG;MACnB,IAAI,CAACH,OAAM,GAAI,IAAI;MACnB,IAAI,CAACC,KAAI,GAAI,IAAI;MACjB,IAAI;QACF,MAAMI,QAAO,GAAI,MAAMjB,KAAK,CAACkB,GAAG,CAAC,gDAAgD,EAAE;UACjFC,MAAM,EAAE;YACNC,cAAc,EAAE,IAAI,CAACjB;UACvB;QACF,CAAC,CAAC;QACFkB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,QAAQ,CAACV,IAAI,CAAC;QAE3C,IAAIU,QAAQ,CAACV,IAAI,CAACgB,MAAK,GAAI,CAAC,EAAE;UAC5B,MAAMC,GAAE,GAAIP,QAAQ,CAACV,IAAI,CAAC,CAAC,CAAC;UAC5B,IAAI,CAACC,cAAa,GAAIgB,GAAG,CAACC,eAAc,IAAK,sBAAsB;UACnE,IAAI,CAAChB,SAAQ,GAAIe,GAAG,CAACE,QAAO,IAAK,qBAAqB,EAAE;UACxD,IAAI,CAAChB,OAAM,GAAIc,GAAG,CAACG,YAAW,IAAK,uBAAuB;UAC1D,IAAI,CAAChB,UAAS,GAAIa,GAAG,CAACI,WAAU,IAAK,uBAAuB;QAC9D,OAAO;UACL,IAAI,CAACpB,cAAa,GAAI,sBAAsB;UAC5C,IAAI,CAACC,SAAQ,GAAI,qBAAqB;UACtC,IAAI,CAACC,OAAM,GAAI,uBAAuB;UACtC,IAAI,CAACC,UAAS,GAAI,uBAAuB;QAC3C;MACF,EAAE,OAAOE,KAAK,EAAE;QACdQ,OAAO,CAACR,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChD,IAAI,CAACA,KAAI,GAAI,mDAAmD;MAClE,UAAU;QACR,IAAI,CAACD,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IACDiB,aAAaA,CAAA,EAAG;MACdR,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAClC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}