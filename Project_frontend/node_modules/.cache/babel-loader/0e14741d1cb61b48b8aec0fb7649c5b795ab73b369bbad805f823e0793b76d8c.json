{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"SingleBug\",\n  props: {\n    project_id: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      bugs: [],\n      // Array to store all bugs\n      activeDropdown: null // To track which dropdown is active\n    };\n  },\n  mounted() {\n    console.log('Received Project ID in SingleBug:', this.project_id);\n    this.fetchBugData();\n  },\n  methods: {\n    async fetchBugData() {\n      try {\n        const response = await axios.get('http://localhost:8000/Bugs/searchbugbyproject/', {\n          params: {\n            bug_project_id: this.project_id\n          }\n        });\n        console.log('API Response:', response.data);\n        this.bugs = response.data;\n      } catch (error) {\n        console.error('Error fetching bug data:', error);\n      }\n    },\n    toggleDropdown(index) {\n      this.activeDropdown = this.activeDropdown === index ? null : index;\n    },\n    changeStatus(bug, status) {\n      // Implement status change logic here\n      console.log(`Changing status of bug ${bug.id} to ${status}`);\n      this.activeDropdown = null; // Close the dropdown\n    },\n    deleteBug(bug) {\n      // Implement delete logic here\n      console.log(`Deleting bug ${bug.id}`);\n      this.activeDropdown = null; // Close the dropdown\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","project_id","type","String","required","data","bugs","activeDropdown","mounted","console","log","fetchBugData","methods","response","get","params","bug_project_id","error","toggleDropdown","index","changeStatus","bug","status","id","deleteBug"],"sources":["/home/ali/BugTrackerProject/Frontend/bugtrackingfrontend/src/components/SingleBug.vue"],"sourcesContent":["<template>\n  <div class=\"bug-details\">\n    <div v-if=\"bugs.length\">\n      <div class=\"heading-row\">\n        <div class=\"heading-item\"><strong>Details:</strong></div>\n        <div class=\"heading-item\"><strong>Status:</strong></div>\n        <div class=\"heading-item\"><strong>Due Date:</strong></div>\n        <div class=\"heading-item\"><strong>Assigned To:</strong></div>\n        <div class=\"heading-item\"><strong>Action:</strong></div>\n      </div>\n      \n      <div v-for=\"(bug, index) in bugs\" :key=\"index\" class=\"bug-detail\">\n        <div class=\"detail-item\">\n          <div class=\"details-content\">\n            <p>{{ bug.bug_description || 'No details available' }}</p>\n          </div>\n        </div>\n        <div class=\"detail-item\">\n          <div class=\"details-content\">\n            <p>{{ bug.bug_type || 'No status available' }}</p>\n          </div>\n        </div>\n        <div class=\"detail-item\">\n          <div class=\"details-content\">\n            <p>{{ bug.due_date || 'No due date available' }}</p>\n          </div>\n        </div>\n        <div class=\"detail-item\">\n          <div class=\"details-content\">\n            <p>{{ bug.assigned_to || 'No assignee available' }}</p>\n          </div>\n        </div>\n        <div class=\"detail-item action-item\">\n          <div class=\"details-content\">\n            <i class=\"fas fa-ellipsis-v action-icon\" @click=\"toggleDropdown(index)\"></i>\n            <!-- Dropdown Menu -->\n            <div v-if=\"activeDropdown === index\" class=\"dropdown-menu\">\n              <ul>\n                <li @click=\"changeStatus(bug, 'Pending')\">Change Status</li>\n                <li @click=\"changeStatus(bug, 'InProgress')\">In Progress</li>\n                <li @click=\"changeStatus(bug, 'InProgress')\">Pending</li>\n                <li @click=\"changeStatus(bug, 'InProgress')\">Closed</li>\n                <li @click=\"deleteBug(bug)\">Delete</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div v-else class=\"no-bugs-message\">\n      No bugs available for this project.\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: \"SingleBug\",\n  props: {\n    project_id: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      bugs: [], // Array to store all bugs\n      activeDropdown: null // To track which dropdown is active\n    };\n  },\n  mounted() {\n    console.log('Received Project ID in SingleBug:', this.project_id);\n    this.fetchBugData();\n  },\n  methods: {\n    async fetchBugData() {\n      try {\n        const response = await axios.get('http://localhost:8000/Bugs/searchbugbyproject/', {\n          params: {\n            bug_project_id: this.project_id\n          }\n        });\n        console.log('API Response:', response.data);\n        this.bugs = response.data;\n      } catch (error) {\n        console.error('Error fetching bug data:', error);\n      }\n    },\n    toggleDropdown(index) {\n      this.activeDropdown = this.activeDropdown === index ? null : index;\n    },\n    changeStatus(bug, status) {\n      // Implement status change logic here\n      console.log(`Changing status of bug ${bug.id} to ${status}`);\n      this.activeDropdown = null; // Close the dropdown\n    },\n    deleteBug(bug) {\n      // Implement delete logic here\n      console.log(`Deleting bug ${bug.id}`);\n      this.activeDropdown = null; // Close the dropdown\n    }\n  }\n}\n</script>\n\n<style scoped>\n.bug-details {\n  font-family: Arial, sans-serif;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px;\n}\n\n.heading-row {\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n}\n\n.heading-item {\n  min-width: 200px;\n  font-weight: bold;\n}\n\n.bug-detail {\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n}\n\n.detail-item {\n  display: flex;\n  flex-direction: column;\n  min-width: 200px;\n}\n\n.details-content {\n  margin-top: 5px;\n  display: flex;\n  align-items: center;\n}\n\n.action-item {\n  position: relative; /* Needed for positioning the dropdown */\n}\n\n.action-icon {\n  cursor: pointer;\n  font-size: 18px;\n  color: #333;\n}\n\n.dropdown-menu {\n  position: absolute;\n  top: 20px;\n  right: 0;\n  background-color: white;\n  border: 1px solid #ccc;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n  width: 150px;\n}\n\n.dropdown-menu ul {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.dropdown-menu li {\n  padding: 10px;\n  cursor: pointer;\n  border-bottom: 1px solid #ddd;\n}\n\n.dropdown-menu li:last-child {\n  border-bottom: none;\n}\n\n/* Colors for specific list items */\n.dropdown-menu li:nth-child(2) {\n  color: red;\n}\n\n.dropdown-menu li:nth-child(3) {\n  color: blue;\n}\n\n.dropdown-menu li:nth-child(4) {\n  color: green;\n}\n\n.dropdown-menu li:nth-child(5) {\n  color: red;\n}\n\n.dropdown-menu li:hover {\n  background-color: #f5f5f5;\n}\n\n.no-bugs-message {\n  font-style: italic;\n  color: #888;\n}\n</style>\n"],"mappings":"AAwDA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MAAE;MACVC,cAAc,EAAE,IAAG,CAAE;IACvB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAE,IAAI,CAACT,UAAU,CAAC;IACjE,IAAI,CAACU,YAAY,CAAC,CAAC;EACrB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMf,KAAK,CAACgB,GAAG,CAAC,gDAAgD,EAAE;UACjFC,MAAM,EAAE;YACNC,cAAc,EAAE,IAAI,CAACf;UACvB;QACF,CAAC,CAAC;QACFQ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEG,QAAQ,CAACR,IAAI,CAAC;QAC3C,IAAI,CAACC,IAAG,GAAIO,QAAQ,CAACR,IAAI;MAC3B,EAAE,OAAOY,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACDC,cAAcA,CAACC,KAAK,EAAE;MACpB,IAAI,CAACZ,cAAa,GAAI,IAAI,CAACA,cAAa,KAAMY,KAAI,GAAI,IAAG,GAAIA,KAAK;IACpE,CAAC;IACDC,YAAYA,CAACC,GAAG,EAAEC,MAAM,EAAE;MACxB;MACAb,OAAO,CAACC,GAAG,CAAC,0BAA0BW,GAAG,CAACE,EAAE,OAAOD,MAAM,EAAE,CAAC;MAC5D,IAAI,CAACf,cAAa,GAAI,IAAI,EAAE;IAC9B,CAAC;IACDiB,SAASA,CAACH,GAAG,EAAE;MACb;MACAZ,OAAO,CAACC,GAAG,CAAC,gBAAgBW,GAAG,CAACE,EAAE,EAAE,CAAC;MACrC,IAAI,CAAChB,cAAa,GAAI,IAAI,EAAE;IAC9B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}