{"ast":null,"code":"import axios from 'axios';\nimport DataTable from 'primevue/datatable';\nimport Column from 'primevue/column';\nexport default {\n  name: \"SingleBug\",\n  components: {\n    DataTable,\n    Column\n  },\n  props: {\n    bugs: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      activeDropdown: null\n    };\n  },\n  methods: {\n    toggleDropdown(index) {\n      this.activeDropdown = this.activeDropdown === index ? null : index;\n    },\n    async changeStatus(bug, status) {\n      try {\n        await axios.patch(`http://localhost:8000/Bugs/update/${bug.id}/`, {\n          bug_type: status\n        });\n        console.log(`Bug ${bug.id} status changed to ${status}.`);\n        this.$emit('update-bugs'); // Notify parent component to update bugs list\n      } catch (error) {\n        console.error(`Error updating bug ${bug.id} status to ${status}:`, error);\n      } finally {\n        this.activeDropdown = null;\n      }\n    },\n    async deleteBug(bug) {\n      try {\n        await axios.patch(`http://localhost:8000/Bugs/update/${bug.id}/`, {\n          bug_type: \"Deleted\"\n        });\n        console.log(`Bug ${bug.id} marked as deleted.`);\n        this.$emit('update-bugs'); // Notify parent component to update bugs list\n      } catch (error) {\n        console.error(`Error deleting bug ${bug.id}:`, error);\n      } finally {\n        this.activeDropdown = null;\n      }\n    }\n  },\n  mounted() {\n    // Log the bugs data to check its structure\n    console.log('asndkasnk');\n    console.log(this.bugs);\n  }\n};","map":{"version":3,"names":["axios","DataTable","Column","name","components","props","bugs","type","Array","required","data","activeDropdown","methods","toggleDropdown","index","changeStatus","bug","status","patch","id","bug_type","console","log","$emit","error","deleteBug","mounted"],"sources":["/home/ali/BugTrackerProject/Frontend/bugtrackingfrontend/src/components/SingleBug.vue"],"sourcesContent":["<template>\n  <div class=\"bug-details\">\n    <div v-if=\"bugs.length\">\n      <DataTable :value=\"bugs\" tableStyle=\"min-width: 50rem\">\n        <Column field=\"bug_description\" header=\"Details\" />\n        <Column field=\"bug_type\" header=\"Status\" />\n        <Column field=\"bug_project.end_date\" header=\"Due Date\" />\n        <Column field=\"bugs_user.user_name\" header=\"Assigned To\" />\n        <Column header=\"Action\">\n          <template #body=\"{ data, index }\">\n            <div class=\"action-item\">\n              <i class=\"fas fa-ellipsis-v action-icon\" @click=\"toggleDropdown(index)\"></i>\n              <div v-if=\"activeDropdown === index\" class=\"dropdown-menu\">\n                <ul>\n                  <li @click=\"changeStatus(data, 'pending')\">Pending</li>\n                  <li @click=\"changeStatus(data, 'inprogress')\">In Progress</li>\n                  <li @click=\"changeStatus(data, 'closed')\">Closed</li>\n                  <li @click=\"deleteBug(data)\">Delete</li>\n                </ul>\n              </div>\n            </div>\n          </template>\n        </Column>\n      </DataTable>\n    </div>\n    <div v-else class=\"no-bugs-message\">\n      No bugs available for this project.\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport DataTable from 'primevue/datatable';\nimport Column from 'primevue/column';\n\nexport default {\n  name: \"SingleBug\",\n  components: {\n    DataTable,\n    Column\n  },\n  props: {\n    bugs: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      activeDropdown: null\n    };\n  },\n  methods: {\n    toggleDropdown(index) {\n      this.activeDropdown = this.activeDropdown === index ? null : index;\n    },\n    async changeStatus(bug, status) {\n      try {\n        await axios.patch(`http://localhost:8000/Bugs/update/${bug.id}/`, {\n          bug_type: status\n        });\n        console.log(`Bug ${bug.id} status changed to ${status}.`);\n        this.$emit('update-bugs'); // Notify parent component to update bugs list\n      } catch (error) {\n        console.error(`Error updating bug ${bug.id} status to ${status}:`, error);\n      } finally {\n        this.activeDropdown = null;\n      }\n    },\n    async deleteBug(bug) {\n      try {\n        await axios.patch(`http://localhost:8000/Bugs/update/${bug.id}/`, {\n          bug_type: \"Deleted\"\n        });\n        console.log(`Bug ${bug.id} marked as deleted.`);\n        this.$emit('update-bugs'); // Notify parent component to update bugs list\n      } catch (error) {\n        console.error(`Error deleting bug ${bug.id}:`, error);\n      } finally {\n        this.activeDropdown = null;\n      }\n    }\n  },\n  mounted() {\n    // Log the bugs data to check its structure\n    console.log('asndkasnk')\n    console.log(this.bugs);\n  }\n}\n</script>\n<style scoped>\n.bug-details {\n  font-family: Arial, sans-serif;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px;\n}\n\n.heading-row {\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n}\n\n.heading-item {\n  min-width: 200px;\n  font-weight: bold;\n}\n\n.detail-item {\n  display: flex;\n  flex-direction: column;\n  min-width: 200px;\n}\n\n.details-content {\n  margin-top: 5px;\n  display: flex;\n  align-items: center;\n}\n\n.action-item {\n  position: relative; /* Needed for positioning the dropdown */\n}\n\n.action-icon {\n  cursor: pointer;\n  font-size: 18px;\n  color: #333;\n}\n\n.dropdown-menu {\n  position: absolute;\n  top: 20px;\n  right: 0;\n  background-color: white;\n  border: 1px solid #ccc;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n  width: 150px;\n}\n\n.dropdown-menu ul {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.dropdown-menu li {\n  padding: 10px;\n  cursor: pointer;\n  border-bottom: 1px solid #ddd;\n}\n\n.dropdown-menu li:last-child {\n  border-bottom: none;\n}\n\n/* Colors for specific list items */\n.dropdown-menu li:nth-child(1) {\n  color: red; /* Pending color */\n}\n\n.dropdown-menu li:nth-child(2) {\n  color: blue; /* In Progress color */\n}\n\n.dropdown-menu li:nth-child(3) {\n  color: green; /* Closed color */\n}\n\n.dropdown-menu li:nth-child(4) {\n  color: red; /* Delete color */\n}\n\n.dropdown-menu li:hover {\n  background-color: #f5f5f5;\n}\n\n.no-bugs-message {\n  font-style: italic;\n  color: #888;\n}\n</style>\n"],"mappings":"AAgCA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,SAAQ,MAAO,oBAAoB;AAC1C,OAAOC,MAAK,MAAO,iBAAiB;AAEpC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACVH,SAAS;IACTC;EACF,CAAC;EACDG,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAACC,KAAK,EAAE;MACpB,IAAI,CAACH,cAAa,GAAI,IAAI,CAACA,cAAa,KAAMG,KAAI,GAAI,IAAG,GAAIA,KAAK;IACpE,CAAC;IACD,MAAMC,YAAYA,CAACC,GAAG,EAAEC,MAAM,EAAE;MAC9B,IAAI;QACF,MAAMjB,KAAK,CAACkB,KAAK,CAAC,qCAAqCF,GAAG,CAACG,EAAE,GAAG,EAAE;UAChEC,QAAQ,EAAEH;QACZ,CAAC,CAAC;QACFI,OAAO,CAACC,GAAG,CAAC,OAAON,GAAG,CAACG,EAAE,sBAAsBF,MAAM,GAAG,CAAC;QACzD,IAAI,CAACM,KAAK,CAAC,aAAa,CAAC,EAAE;MAC7B,EAAE,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,sBAAsBR,GAAG,CAACG,EAAE,cAAcF,MAAM,GAAG,EAAEO,KAAK,CAAC;MAC3E,UAAU;QACR,IAAI,CAACb,cAAa,GAAI,IAAI;MAC5B;IACF,CAAC;IACD,MAAMc,SAASA,CAACT,GAAG,EAAE;MACnB,IAAI;QACF,MAAMhB,KAAK,CAACkB,KAAK,CAAC,qCAAqCF,GAAG,CAACG,EAAE,GAAG,EAAE;UAChEC,QAAQ,EAAE;QACZ,CAAC,CAAC;QACFC,OAAO,CAACC,GAAG,CAAC,OAAON,GAAG,CAACG,EAAE,qBAAqB,CAAC;QAC/C,IAAI,CAACI,KAAK,CAAC,aAAa,CAAC,EAAE;MAC7B,EAAE,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,sBAAsBR,GAAG,CAACG,EAAE,GAAG,EAAEK,KAAK,CAAC;MACvD,UAAU;QACR,IAAI,CAACb,cAAa,GAAI,IAAI;MAC5B;IACF;EACF,CAAC;EACDe,OAAOA,CAAA,EAAG;IACR;IACAL,OAAO,CAACC,GAAG,CAAC,WAAW;IACvBD,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChB,IAAI,CAAC;EACxB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}