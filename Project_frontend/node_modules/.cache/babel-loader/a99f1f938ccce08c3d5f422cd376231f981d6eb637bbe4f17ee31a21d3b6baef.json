{"ast":null,"code":"import { signupUser } from '@/servicesfile/signupfile';\nexport default {\n  name: 'RightSideSignup',\n  props: {\n    userType: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      form: {\n        name: '',\n        mobile: '',\n        email: '',\n        password: ''\n      },\n      successMessage: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async handleSubmit() {\n      this.successMessage = '';\n      this.errorMessage = '';\n      if (!this.form.name || !this.form.mobile || !this.form.email || !this.form.password) {\n        this.errorMessage = 'Please fill in all required fields.';\n        return;\n      }\n      try {\n        const userData = {\n          user_name: this.form.name,\n          user_email: this.form.email,\n          user_password: this.form.password,\n          user_type: this.userType\n        };\n        console.log(userData.user_type);\n        console.log(userData.user_name);\n        const response = await signupUser(userData);\n        this.successMessage = 'You have successfully signed up!';\n        console.log('Response:', response);\n      } catch (error) {\n        if (error.response) {\n          if (error.response.status === 400) {\n            this.errorMessage = 'User with this email exists';\n          } else {\n            this.errorMessage = 'Error: ' + (error.response.data.user_email ? error.response.data.user_email[0] : 'An error occurred');\n          }\n          console.error('Error response data:', error.response.data);\n          console.error('Error response status:', error.response.status);\n          console.error('Error response headers:', error.response.headers);\n        } else if (error.request) {\n          console.error('Error request data:', error.request);\n          this.errorMessage = 'Error: No response received from server';\n        } else {\n          console.error('Error message:', error.message);\n          this.errorMessage = 'Error: ' + error.message;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["signupUser","name","props","userType","type","String","required","data","form","mobile","email","password","successMessage","errorMessage","methods","handleSubmit","userData","user_name","user_email","user_password","user_type","console","log","response","error","status","headers","request","message"],"sources":["/home/ali/BugTrackerProject/Frontend/bugtrackingfrontend/src/components/SignInDetails.vue"],"sourcesContent":["<template>\n  <div class=\"RightSide\">\n    <div class=\"main text\">\n      <div class=\"Signin\">\n        <b><h2>Sign Up</h2></b>\n        <label>Please fill in the information below</label>\n      </div>\n      <div class=\"form\">\n        <form @submit.prevent=\"handleSubmit\">\n          <div v-if=\"successMessage\" class=\"success-message\">{{ successMessage }}</div>\n          <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\n          <div class=\"form-group\">\n            <div class=\"input-container\">\n              <i class=\"fas fa-user icon\"></i>\n              <input type=\"text\" id=\"name\" v-model=\"form.name\" placeholder=\"Enter your name\" />\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"input-container\">\n              <i class=\"fas fa-mobile-alt icon\"></i>\n              <input type=\"tel\" id=\"mobile\" v-model=\"form.mobile\" placeholder=\"Enter your mobile number\" />\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"input-container\">\n              <i class=\"fas fa-envelope icon\"></i>\n              <input type=\"email\" id=\"email\" v-model=\"form.email\" placeholder=\"Enter your email\" />\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"input-container\">\n              <i class=\"fas fa-lock icon\"></i>\n              <input type=\"password\" id=\"password\" v-model=\"form.password\" placeholder=\"Enter your password\" />\n            </div>\n          </div>\n          <button type=\"submit\"><b>Sign Up</b> <i class=\"fas fa-arrow-right\"></i></button>\n          <hr class=\"dotted-line\" />\n        </form>\n      </div>\n      <div class=\"AlreadyAccount\"></div>\n      <label>Already have an account?</label> <router-link to=\"/Login\" class=\"login-link\"> Log in to your account</router-link>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { signupUser } from '@/servicesfile/signupfile';\n\nexport default {\n  name: 'RightSideSignup',\n  props: {\n    userType: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      form: {\n        name: '',\n        mobile: '',\n        email: '',\n        password: '',\n      },\n      successMessage: '',\n      errorMessage: '',\n    };\n  },\n  methods: {\n    async handleSubmit() {\n      this.successMessage = '';\n      this.errorMessage = '';\n\n      if (!this.form.name || !this.form.mobile || !this.form.email || !this.form.password) {\n        this.errorMessage = 'Please fill in all required fields.';\n        return;\n      }\n\n      try {\n        const userData = {\n          user_name: this.form.name,\n          user_email: this.form.email,\n          user_password: this.form.password,\n          user_type: this.userType,\n        };\n        console.log(userData.user_type)\n        console.log(userData.user_name)\n        const response = await signupUser(userData);\n        this.successMessage = 'You have successfully signed up!';\n        console.log('Response:', response);\n      } \n      catch (error) \n      {\n        if (error.response) \n        {\n          if (error.response.status === 400) {\n            this.errorMessage = 'User with this email exists';\n          } else \n          {\n            this.errorMessage = 'Error: ' + (error.response.data.user_email ? error.response.data.user_email[0] : 'An error occurred');\n          }\n          console.error('Error response data:', error.response.data);\n          console.error('Error response status:', error.response.status);\n          console.error('Error response headers:', error.response.headers);\n        } else if (error.request) \n        {\n          console.error('Error request data:', error.request);\n          this.errorMessage = 'Error: No response received from server';\n        } else \n        {\n          console.error('Error message:', error.message);\n          this.errorMessage = 'Error: ' + error.message;\n        }\n      }\n    }\n  }\n}\n\n</script>\n\n<style scoped>\n.success-message {\n  color: green;\n  margin-bottom: 15px;\n  font-weight: bold;\n}\n\n.error-message {\n  color: red;\n  margin-bottom: 15px;\n  font-weight: bold;\n}\n\n.RightSide {\n  position: absolute;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  width: 50%; \n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  box-sizing: border-box;\n  background-color: #f9f9f9; \n}\n\n.main {\n  width: 100%;\n}\n\n.Signin {\n  margin-bottom: 20px;\n}\n\n.form {\n  width: 100%;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n}\n\n.input-container {\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 80%; \n  max-width: 500px; \n}\n\ninput {\n  width: 100%;\n  padding: 10px; \n  padding-left: 40px; \n  font-size: 16px; \n  box-sizing: border-box;\n  border-radius: 4px; \n}\n\n.icon {\n  position: absolute;\n  left: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #aaa; /* Adjust color as needed */\n}\n\nbutton {\n  padding: 10px 15px;\n  border: none;\n  background-color: #007BFF;\n  color: white;\n  cursor: pointer;\n  border-radius: 4px; /* Optional: Add rounded corners */\n  display: flex;\n  align-items: center;\n}\n\nbutton i {\n  margin-left: 10px; /* Add space between text and arrow icon */\n}\n\nbutton:hover {\n  background-color: #0056b3;\n}\n\n.dotted-line {\n  width: 80%; /* Same width as the input fields */\n  max-width: 500px; /* Match the maximum width of the input fields */\n  border: none;\n  border-top: 1px dotted #ccc; /* Dotted line style */\n  margin: 20px 0; /* Space above and below the line */\n}\n\n.login-link {\n  color: #007BFF;\n  text-decoration: none;\n}\n\n.login-link:hover {\n  text-decoration: underline;\n}\n</style>\n"],"mappings":"AA8CA,SAASA,UAAS,QAAS,2BAA2B;AAEtD,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJP,IAAI,EAAE,EAAE;QACRQ,MAAM,EAAE,EAAE;QACVC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ,CAAC;MACDC,cAAc,EAAE,EAAE;MAClBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI,CAACH,cAAa,GAAI,EAAE;MACxB,IAAI,CAACC,YAAW,GAAI,EAAE;MAEtB,IAAI,CAAC,IAAI,CAACL,IAAI,CAACP,IAAG,IAAK,CAAC,IAAI,CAACO,IAAI,CAACC,MAAK,IAAK,CAAC,IAAI,CAACD,IAAI,CAACE,KAAI,IAAK,CAAC,IAAI,CAACF,IAAI,CAACG,QAAQ,EAAE;QACnF,IAAI,CAACE,YAAW,GAAI,qCAAqC;QACzD;MACF;MAEA,IAAI;QACF,MAAMG,QAAO,GAAI;UACfC,SAAS,EAAE,IAAI,CAACT,IAAI,CAACP,IAAI;UACzBiB,UAAU,EAAE,IAAI,CAACV,IAAI,CAACE,KAAK;UAC3BS,aAAa,EAAE,IAAI,CAACX,IAAI,CAACG,QAAQ;UACjCS,SAAS,EAAE,IAAI,CAACjB;QAClB,CAAC;QACDkB,OAAO,CAACC,GAAG,CAACN,QAAQ,CAACI,SAAS;QAC9BC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAACC,SAAS;QAC9B,MAAMM,QAAO,GAAI,MAAMvB,UAAU,CAACgB,QAAQ,CAAC;QAC3C,IAAI,CAACJ,cAAa,GAAI,kCAAkC;QACxDS,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,QAAQ,CAAC;MACpC,EACA,OAAOC,KAAK,EACZ;QACE,IAAIA,KAAK,CAACD,QAAQ,EAClB;UACE,IAAIC,KAAK,CAACD,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;YACjC,IAAI,CAACZ,YAAW,GAAI,6BAA6B;UACnD,OACA;YACE,IAAI,CAACA,YAAW,GAAI,SAAQ,IAAKW,KAAK,CAACD,QAAQ,CAAChB,IAAI,CAACW,UAAS,GAAIM,KAAK,CAACD,QAAQ,CAAChB,IAAI,CAACW,UAAU,CAAC,CAAC,IAAI,mBAAmB,CAAC;UAC5H;UACAG,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACD,QAAQ,CAAChB,IAAI,CAAC;UAC1Dc,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACD,QAAQ,CAACE,MAAM,CAAC;UAC9DJ,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACD,QAAQ,CAACG,OAAO,CAAC;QAClE,OAAO,IAAIF,KAAK,CAACG,OAAO,EACxB;UACEN,OAAO,CAACG,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACG,OAAO,CAAC;UACnD,IAAI,CAACd,YAAW,GAAI,yCAAyC;QAC/D,OACA;UACEQ,OAAO,CAACG,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACI,OAAO,CAAC;UAC9C,IAAI,CAACf,YAAW,GAAI,SAAQ,GAAIW,KAAK,CAACI,OAAO;QAC/C;MACF;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}