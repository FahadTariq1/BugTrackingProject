{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { jwtDecode } from 'jwt-decode';\nimport { fetchAllProjects, searchProjects } from '../servicesfile/service';\nimport SingleProject from './SingleProject.vue';\nimport PopUpNewProject from './PopUpNewProject.vue';\nexport default {\n  name: 'MultipleProjects',\n  components: {\n    SingleProject,\n    PopUpNewProject\n  },\n  data() {\n    return {\n      projects: [],\n      searchQuery: '',\n      currentPage: 1,\n      projectsPerPage: 6,\n      totalPages: 1,\n      isModalVisible: false,\n      authToken: '',\n      userType: ''\n    };\n  },\n  computed: {\n    paginatedProjects() {\n      return this.projects;\n    }\n  },\n  methods: {\n    async searchProjects() {\n      const query = this.searchQuery.trim();\n      if (query) {\n        try {\n          const data = await searchProjects(query);\n          console.log('Search results:', data);\n          this.projects = data;\n          this.currentPage = 1;\n          this.totalPages = Math.ceil(data.length / this.projectsPerPage);\n        } catch (error) {\n          console.error('Error searching projects:', error);\n        }\n      } else {\n        this.fetchAllProjects();\n      }\n    },\n    async fetchAllProjects(page = 1) {\n      try {\n        const data = await fetchAllProjects(page);\n        console.log('Projects data:', data);\n        this.projects = data.results;\n        console.log('THis is the Projects Data', this.projects);\n        this.$router.push({\n          query: {\n            ...this.$route.query,\n            page\n          }\n        });\n        console.log(this.route.query);\n        console.log;\n        this.totalPages = Math.ceil(data.count / this.projectsPerPage); // Adjust based on your API response structure\n        this.currentPage = page;\n      } catch (error) {\n        console.error('Error fetching projects data:', error);\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.fetchAllProjects(this.currentPage - 1);\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.fetchAllProjects(this.currentPage + 1);\n        console.log(this.fetchAllProjects);\n      }\n    },\n    handleProjectClick(project_id) {\n      this.$router.push({\n        name: 'AllBugs',\n        params: {\n          project_id\n        }\n      });\n    },\n    showAddProjectModal() {\n      this.isModalVisible = true;\n    },\n    printAuthToken() {\n      this.authToken = localStorage.getItem('authToken');\n      if (this.authToken) {\n        try {\n          const decoded = jwtDecode(this.authToken);\n          this.userType = decoded.user_type;\n          console.log('Decoded Token:', decoded);\n        } catch (error) {\n          console.error('Error decoding token:', error);\n        }\n      } else {\n        console.log('No auth token found in local storage.');\n      }\n    }\n  },\n  beforeMount() {\n    this.printAuthToken();\n  },\n  mounted() {\n    this.fetchAllProjects();\n  }\n};","map":{"version":3,"names":["jwtDecode","fetchAllProjects","searchProjects","SingleProject","PopUpNewProject","name","components","data","projects","searchQuery","currentPage","projectsPerPage","totalPages","isModalVisible","authToken","userType","computed","paginatedProjects","methods","query","trim","console","log","Math","ceil","length","error","page","results","$router","push","$route","route","count","prevPage","nextPage","handleProjectClick","project_id","params","showAddProjectModal","printAuthToken","localStorage","getItem","decoded","user_type","beforeMount","mounted"],"sources":["/home/ali/BugTrackerProject/Frontend/bugtrackingfrontend/src/components/Multipleprojects.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"show-project-container\">\n      <div class=\"heading-of-project\">\n        <h4>Projects</h4>\n        <span class=\"welcome-message\">Hi Devisnext, Welcome to ManageBug</span>\n      </div>\n      <div class=\"right-container\">\n        <div class=\"search-container\">\n          <div class=\"search-input-wrapper\">\n            <i class=\"search-icon\">üîç</i>\n            <input \n              type=\"text\" \n              v-model=\"searchQuery\" \n              placeholder=\"Search for the project here\" \n              class=\"search-input\" \n              @input=\"searchProjects\"\n            />\n          </div>\n          <button \n            v-if=\"userType === 'manager'\" \n            class=\"add-bug-button\" \n            @click=\"showAddProjectModal\"\n          >\n            <span class=\"plus-sign\">+</span> Add New Project\n          </button>\n          <select class=\"manage-dropdown\">\n            <option value=\"manage\">Manage by</option>\n          </select>\n          <select class=\"sort-dropdown\">\n            <option value=\"name\">Sort by</option>\n          </select>\n          <img src=\"../assets/Images/buglogo.png\" alt=\"Logo\" class=\"logo-icon\" />\n        </div>\n      </div>\n    </div>\n\n    <div class=\"multiple-projects-container\">\n      <div :class=\"['project-grid', projects.length > 6 ? 'grid-row' : 'grid-column']\">\n        <SingleProject\n          v-for=\"(project, index) in paginatedProjects\"\n          :key=\"index\"\n          :project_id=\"project.id\"\n          :project_name=\"project.project_name\"\n          :project_description=\"project.project_description\"\n          :bug_count=\"project.bug_count\"\n          :closed_bug_count=\"project.closed_bug_count\"\n          @project-clicked=\"handleProjectClick\"\n        />\n      </div>\n      <div v-if=\"totalPages > 1\" class=\"pagination-controls\">\n        <button @click=\"prevPage\" :disabled=\"currentPage === 1\">Previous</button>\n        <span>Page {{ currentPage }} of {{ totalPages }}</span>\n        <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">Next</button>\n      </div>\n    </div>\n\n    <PopUpNewProject \n      :isVisible=\"isModalVisible\" \n      @update:isVisible=\"isModalVisible = $event\" \n      @project-added=\"fetchAllProjects(currentPage)\"\n    />\n  </div>\n</template>\n\n<script>\nimport { jwtDecode } from 'jwt-decode';\nimport { fetchAllProjects, searchProjects } from '../servicesfile/service';\nimport SingleProject from './SingleProject.vue';\nimport PopUpNewProject from './PopUpNewProject.vue';\n\nexport default {\n  name: 'MultipleProjects',\n  components: {\n    SingleProject,\n    PopUpNewProject\n  },\n  data() {\n    return {\n      projects: [],\n      searchQuery: '',\n      currentPage: 1,\n      projectsPerPage: 6,\n      totalPages: 1,\n      isModalVisible: false,\n      authToken: '',\n      userType: ''\n    };\n  },\n  computed: {\n    paginatedProjects() {\n      return this.projects\n    },\n  },\n  methods: {\n    async searchProjects() {\n      const query = this.searchQuery.trim();\n      if (query) {\n        try {\n          const data = await searchProjects(query);\n          console.log('Search results:', data);\n          this.projects = data;\n          this.currentPage = 1;\n          this.totalPages = Math.ceil(data.length / this.projectsPerPage);\n        } catch (error) {\n          console.error('Error searching projects:', error);\n        }\n      } else {\n        this.fetchAllProjects();\n      }\n    },\n    async fetchAllProjects(page = 1) {\n      try {\n        const data = await fetchAllProjects(page);\n        console.log('Projects data:', data);\n        this.projects = data.results;\n        console.log('THis is the Projects Data',this.projects)\n        this.$router.push({ query: { ...this.$route.query, page } });\n        console.log(this.route.query)\n        console.log\n        this.totalPages = Math.ceil(data.count / this.projectsPerPage); // Adjust based on your API response structure\n        this.currentPage = page;\n      } catch (error) {\n        console.error('Error fetching projects data:', error);\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.fetchAllProjects(this.currentPage - 1);\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.fetchAllProjects(this.currentPage + 1);\n        console.log(this.fetchAllProjects)\n      }\n    },\n    handleProjectClick(project_id) {\n      this.$router.push({ name: 'AllBugs', params: { project_id } });\n    },\n    showAddProjectModal() {\n      this.isModalVisible = true;\n    },\n    printAuthToken() {\n      this.authToken = localStorage.getItem('authToken');\n      if (this.authToken) {\n        try {\n          const decoded = jwtDecode(this.authToken);\n          this.userType = decoded.user_type;\n          console.log('Decoded Token:', decoded);\n        } catch (error) {\n          console.error('Error decoding token:', error);\n        }\n      } else {\n        console.log('No auth token found in local storage.');\n      }\n    }\n  },\n  beforeMount(){\n    this.printAuthToken();\n  },\n  mounted() {\n    this.fetchAllProjects();\n  }\n};\n</script>\n\n<style scoped>\n.container {\n  display: flex;\n  flex-direction: column;\n  margin: 50px 20px;\n}\n\n.show-project-container {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.right-container {\n  display: flex;\n  align-items: center;\n}\n\n.heading-of-project {\n  display: flex;\n  flex-direction: column;\n}\n\n.heading-of-project h4 {\n  margin-bottom: 5px;\n}\n\n.welcome-message {\n  font-size: 12px;\n  color: #808080;\n}\n\n.search-container {\n  display: flex;\n  align-items: center;\n  margin-left: 20px; /* Space between the search container and heading */\n}\n\n.search-input-wrapper {\n  position: relative;\n}\n\n.search-icon {\n  position: absolute;\n  left: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  font-size: 18px;\n  color: #aaa;\n\n}\n\n.search-input {\n  width: 300px;\n  padding: 10px 15px 10px 35px;\n  font-size: 16px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  background-color: #f0f0f0;\n}\n\n.add-bug-button {\n  display: flex;\n  align-items: center;\n  margin-left: 20px;\n  padding: 10px 15px;\n  font-size: 16px;\n  color: #fff;\n  background-color: #007bff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.add-bug-button:hover {\n  background-color: #0056b3;\n}\n\n.plus-sign {\n  margin-right: 8px;\n  font-weight: bold;\n}\n\n.manage-dropdown,\n.sort-dropdown {\n  margin-left: 20px;\n  padding: 10px 15px;\n  font-size: 16px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  background-color: #fff;\n  cursor: pointer;\n}\n\n.logo-icon {\n  margin-left: 10px;\n  height: 50px;\n}\n\n.multiple-projects-container {\n  margin-top: 20px;\n}\n\n.project-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 20px;\n}\n\n.grid-row {\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n}\n\n.grid-column {\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n}\n\n.pagination-controls {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n}\n.pagination-controls button {\n  padding: 5px 10px;\n}\n</style>"],"mappings":";AAkEA,SAASA,SAAQ,QAAS,YAAY;AACtC,SAASC,gBAAgB,EAAEC,cAAa,QAAS,yBAAyB;AAC1E,OAAOC,aAAY,MAAO,qBAAqB;AAC/C,OAAOC,eAAc,MAAO,uBAAuB;AAEnD,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,UAAU,EAAE;IACVH,aAAa;IACbC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,EAAE;MACfC,WAAW,EAAE,CAAC;MACdC,eAAe,EAAE,CAAC;MAClBC,UAAU,EAAE,CAAC;MACbC,cAAc,EAAE,KAAK;MACrBC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACT,QAAO;IACrB;EACF,CAAC;EACDU,OAAO,EAAE;IACP,MAAMhB,cAAcA,CAAA,EAAG;MACrB,MAAMiB,KAAI,GAAI,IAAI,CAACV,WAAW,CAACW,IAAI,CAAC,CAAC;MACrC,IAAID,KAAK,EAAE;QACT,IAAI;UACF,MAAMZ,IAAG,GAAI,MAAML,cAAc,CAACiB,KAAK,CAAC;UACxCE,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEf,IAAI,CAAC;UACpC,IAAI,CAACC,QAAO,GAAID,IAAI;UACpB,IAAI,CAACG,WAAU,GAAI,CAAC;UACpB,IAAI,CAACE,UAAS,GAAIW,IAAI,CAACC,IAAI,CAACjB,IAAI,CAACkB,MAAK,GAAI,IAAI,CAACd,eAAe,CAAC;QACjE,EAAE,OAAOe,KAAK,EAAE;UACdL,OAAO,CAACK,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACnD;MACF,OAAO;QACL,IAAI,CAACzB,gBAAgB,CAAC,CAAC;MACzB;IACF,CAAC;IACD,MAAMA,gBAAgBA,CAAC0B,IAAG,GAAI,CAAC,EAAE;MAC/B,IAAI;QACF,MAAMpB,IAAG,GAAI,MAAMN,gBAAgB,CAAC0B,IAAI,CAAC;QACzCN,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEf,IAAI,CAAC;QACnC,IAAI,CAACC,QAAO,GAAID,IAAI,CAACqB,OAAO;QAC5BP,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAC,IAAI,CAACd,QAAQ;QACrD,IAAI,CAACqB,OAAO,CAACC,IAAI,CAAC;UAAEX,KAAK,EAAE;YAAE,GAAG,IAAI,CAACY,MAAM,CAACZ,KAAK;YAAEQ;UAAK;QAAE,CAAC,CAAC;QAC5DN,OAAO,CAACC,GAAG,CAAC,IAAI,CAACU,KAAK,CAACb,KAAK;QAC5BE,OAAO,CAACC,GAAE;QACV,IAAI,CAACV,UAAS,GAAIW,IAAI,CAACC,IAAI,CAACjB,IAAI,CAAC0B,KAAI,GAAI,IAAI,CAACtB,eAAe,CAAC,EAAE;QAChE,IAAI,CAACD,WAAU,GAAIiB,IAAI;MACzB,EAAE,OAAOD,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IACDQ,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACxB,WAAU,GAAI,CAAC,EAAE;QACxB,IAAI,CAACT,gBAAgB,CAAC,IAAI,CAACS,WAAU,GAAI,CAAC,CAAC;MAC7C;IACF,CAAC;IACDyB,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACzB,WAAU,GAAI,IAAI,CAACE,UAAU,EAAE;QACtC,IAAI,CAACX,gBAAgB,CAAC,IAAI,CAACS,WAAU,GAAI,CAAC,CAAC;QAC3CW,OAAO,CAACC,GAAG,CAAC,IAAI,CAACrB,gBAAgB;MACnC;IACF,CAAC;IACDmC,kBAAkBA,CAACC,UAAU,EAAE;MAC7B,IAAI,CAACR,OAAO,CAACC,IAAI,CAAC;QAAEzB,IAAI,EAAE,SAAS;QAAEiC,MAAM,EAAE;UAAED;QAAW;MAAE,CAAC,CAAC;IAChE,CAAC;IACDE,mBAAmBA,CAAA,EAAG;MACpB,IAAI,CAAC1B,cAAa,GAAI,IAAI;IAC5B,CAAC;IACD2B,cAAcA,CAAA,EAAG;MACf,IAAI,CAAC1B,SAAQ,GAAI2B,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAClD,IAAI,IAAI,CAAC5B,SAAS,EAAE;QAClB,IAAI;UACF,MAAM6B,OAAM,GAAI3C,SAAS,CAAC,IAAI,CAACc,SAAS,CAAC;UACzC,IAAI,CAACC,QAAO,GAAI4B,OAAO,CAACC,SAAS;UACjCvB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEqB,OAAO,CAAC;QACxC,EAAE,OAAOjB,KAAK,EAAE;UACdL,OAAO,CAACK,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC/C;MACF,OAAO;QACLL,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;MACtD;IACF;EACF,CAAC;EACDuB,WAAWA,CAAA,EAAE;IACX,IAAI,CAACL,cAAc,CAAC,CAAC;EACvB,CAAC;EACDM,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC7C,gBAAgB,CAAC,CAAC;EACzB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}