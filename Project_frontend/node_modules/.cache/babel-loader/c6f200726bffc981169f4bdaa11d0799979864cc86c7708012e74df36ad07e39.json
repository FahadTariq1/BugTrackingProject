{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-18751eee\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_2 = {\n  class: \"modal-content\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"topheadergray\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"Add new bug\")], -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"New Task Bug\")], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.isVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", {\n    class: \"close\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.closeModal && $options.closeModal(...args))\n  }, \"Ã—\"), _hoisted_3, _hoisted_4, _createCommentVNode(\" Add your form or content for the new task bug here \")])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","_createElementVNode","$props","isVisible","_createElementBlock","_hoisted_1","_hoisted_2","onClick","_cache","args","$options","closeModal","_hoisted_3","_hoisted_4","_createCommentVNode"],"sources":["/home/ali/BugTrackerProject/Frontend/bugtrackingfrontend/src/components/PopUpNewTask.vue"],"sourcesContent":["<template>\n    <div class=\"modal\" v-if=\"isVisible\">\n      <div class=\"modal-content\">\n        <span class=\"close\" @click=\"closeModal\">&times;</span>\n        <div class=\"topheadergray\">\n          <h2>Add new bug</h2>\n        </div>\n        <div class=\"header\">\n          <h2>New Task Bug</h2>\n        </div>\n        <!-- Add your form or content for the new task bug here -->\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'PopUpNewTask',\n    props: {\n      isVisible: {\n        type: Boolean,\n        required: true\n      }\n    },\n    methods: {\n      closeModal() {\n        this.$emit('update:isVisible', false);\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .modal {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: rgba(0, 0, 0, 0.5);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    }\n  \n  .modal-content {\n    background-color: white;\n    padding: 20px;\n    border-radius: 5px;\n    width: 50%;\n    max-width: 600px;\n    position: relative;\n    min-width: 50%; /* Maximum width of the modal */\n    min-height: 90%; /* Maximum height of the modal */\n  }\n  \n  .close {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    font-size: 30px;\n    cursor: pointer;\n  }\n  \n  .topheadergray {\n    background-color: lightgray;\n    padding: 10px; /* Add some padding */\n    border-radius: 5px 5px 0 0; /* Rounded corners on top only */\n    margin-bottom: 10px; /* Space between header and content */\n    text-align: center; /* Center the text */\n  }\n  \n  .header {\n    margin-bottom: 20px; /* Space between header and content */\n    text-align: center; /* Center the text */\n  }\n  </style>\n  "],"mappings":";;;EAAAA,GAAA;EACSC,KAAK,EAAC;;;EACJA,KAAK,EAAC;AAAe;gEAExBC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAe,I,aACxBC,mBAAA,CAAoB,YAAhB,aAAW,E;gEAEjBA,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAQ,I,aACjBC,mBAAA,CAAqB,YAAjB,cAAY,E;;SAPGC,MAAA,CAAAC,SAAS,I,cAAlCC,mBAAA,CAWM,OAXNC,UAWM,GAVJJ,mBAAA,CASM,OATNK,UASM,GARJL,mBAAA,CAAsD;IAAhDD,KAAK,EAAC,OAAO;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,GAAO,GAC/CG,UAEM,EACNC,UAEM,EACNC,mBAAA,wDAA2D,C,OAVnEA,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}