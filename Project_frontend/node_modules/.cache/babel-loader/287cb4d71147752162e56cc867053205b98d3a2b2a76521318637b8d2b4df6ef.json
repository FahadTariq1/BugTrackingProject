{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport SingleProject from './SingleProject.vue';\nexport default {\n  name: 'MultipleProjects',\n  components: {\n    SingleProject\n  },\n  data() {\n    return {\n      projects: [],\n      // To store the fetched projects\n      searchQuery: '',\n      // Search input value\n      currentPage: 1,\n      // To keep track of the current page\n      projectsPerPage: 6 // Number of projects to show per page\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.projects.length / this.projectsPerPage);\n    },\n    paginatedProjects() {\n      const startIndex = (this.currentPage - 1) * this.projectsPerPage;\n      const endIndex = startIndex + this.projectsPerPage;\n      return this.projects.slice(startIndex, endIndex);\n    }\n  },\n  methods: {\n    searchProjects() {\n      const query = this.searchQuery.trim();\n      if (query) {\n        fetch(`http://localhost:8000/Projects/searchproject/?project_name=${encodeURIComponent(query)}`).then(response => response.json()).then(data => {\n          console.log('Search results:', data);\n          this.projects = data; // Update the projects with search results\n          this.currentPage = 1; // Reset to the first page\n        }).catch(error => {\n          console.error('Error searching projects:', error);\n        });\n      } else {\n        // If search query is empty, fetch all projects\n        this.fetchAllProjects();\n      }\n    },\n    fetchAllProjects() {\n      fetch('http://localhost:8000/Projects/allprojects/').then(response => response.json()).then(data => {\n        console.log('Projects data:', data);\n        this.projects = data; // Assign the fetched data to projects\n        this.currentPage = 1; // Reset to the first page\n      }).catch(error => {\n        console.error('Error fetching projects data:', error);\n      });\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    handleProjectClick(projectId) {\n      this.$router.push({\n        name: 'AllBugs',\n        params: {\n          projectId\n        }\n      });\n    }\n  },\n  mounted() {\n    // Load initial data\n    this.fetchAllProjects();\n  }\n};","map":{"version":3,"names":["SingleProject","name","components","data","projects","searchQuery","currentPage","projectsPerPage","computed","totalPages","Math","ceil","length","paginatedProjects","startIndex","endIndex","slice","methods","searchProjects","query","trim","fetch","encodeURIComponent","then","response","json","console","log","catch","error","fetchAllProjects","prevPage","nextPage","handleProjectClick","projectId","$router","push","params","mounted"],"sources":["/home/ali/BugTrackerProject/Frontend/bugtrackingfrontend/src/components/Multipleprojects.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"show-project-container\">\n      <div class=\"heading-of-project\">\n        <h4>Projects</h4>\n        <span class=\"welcome-message\">Hi Devisnext, Welcome to ManageBug</span>\n      </div>\n      <div class=\"right-container\">\n        <div class=\"search-container\">\n          <div class=\"search-input-wrapper\">\n            <i class=\"search-icon\">üîç</i>\n            <input \n              type=\"text\" \n              v-model=\"searchQuery\" \n              placeholder=\"Search for the project here\" \n              class=\"search-input\" \n              @input=\"searchProjects\"\n            />\n          </div>\n          <button class=\"add-bug-button\">\n            <span class=\"plus-sign\">+</span> Add New Bug\n          </button>\n          <select class=\"manage-dropdown\">\n            <option value=\"manage\">Manage by</option>\n            <!-- Add more options here if needed -->\n          </select>\n          <select class=\"sort-dropdown\">\n            <option value=\"name\">Sort by</option>\n            <!-- Add more options here if needed -->\n          </select>\n          <img src=\"../assets/Images/buglogo.png\" alt=\"Logo\" class=\"logo-icon\" />\n        </div>\n      </div>\n    </div>\n\n    <div class=\"multiple-projects-container\">\n      <div :class=\"['project-grid', projects.length > 6 ? 'grid-row' : 'grid-column']\">\n        <SingleProject\n  v-for=\"(project, index) in paginatedProjects\"\n  :key=\"index\"\n  :project_id=\"project.id\"\n  :project_name=\"project.project_name\"\n  :project_description=\"project.project_description\"\n  @project-clicked=\"handleProjectClick\"\n/>\n      </div>\n      <div v-if=\"projects.length > projectsPerPage\" class=\"pagination-controls\">\n        <button @click=\"prevPage\" :disabled=\"currentPage === 1\">Previous</button>\n        <span>Page {{ currentPage }} of {{ totalPages }}</span>\n        <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">Next</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport SingleProject from './SingleProject.vue';\n\nexport default {\n  name: 'MultipleProjects',\n  components: {\n    SingleProject,\n  },\n  data() {\n    return {\n      projects: [], // To store the fetched projects\n      searchQuery: '', // Search input value\n      currentPage: 1, // To keep track of the current page\n      projectsPerPage: 6, // Number of projects to show per page\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.projects.length / this.projectsPerPage);\n    },\n    paginatedProjects() {\n      const startIndex = (this.currentPage - 1) * this.projectsPerPage;\n      const endIndex = startIndex + this.projectsPerPage;\n      return this.projects.slice(startIndex, endIndex);\n    },\n  },\n  methods: {\n    searchProjects() {\n      const query = this.searchQuery.trim();\n      if (query) {\n        fetch(`http://localhost:8000/Projects/searchproject/?project_name=${encodeURIComponent(query)}`)\n          .then(response => response.json())\n          .then(data => {\n            console.log('Search results:', data);\n            this.projects = data; // Update the projects with search results\n            this.currentPage = 1; // Reset to the first page\n          })\n          .catch(error => {\n            console.error('Error searching projects:', error);\n          });\n      } else {\n        // If search query is empty, fetch all projects\n        this.fetchAllProjects();\n      }\n    },\n    fetchAllProjects() {\n      fetch('http://localhost:8000/Projects/allprojects/')\n        .then(response => response.json())\n        .then(data => {\n          console.log('Projects data:', data);\n          this.projects = data; // Assign the fetched data to projects\n          this.currentPage = 1; // Reset to the first page\n        })\n        .catch(error => {\n          console.error('Error fetching projects data:', error);\n        });\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    handleProjectClick(projectId) {\n    this.$router.push({ name: 'AllBugs', params: { projectId } });\n  }\n  },\n  mounted() {\n    // Load initial data\n    this.fetchAllProjects();\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  display: flex;\n  flex-direction: column;\n  margin: 50px 20px;\n}\n\n.show-project-container {\n  display: flex;\n  justify-content: space-between; /* Space out heading and right container */\n  align-items: center; /* Align items vertically centered */\n  margin-bottom: 20px;\n}\n\n.right-container {\n  display: flex;\n  align-items: center;\n}\n\n.heading-of-project {\n  display: flex;\n  flex-direction: column;\n}\n\n.heading-of-project h4 {\n  margin-bottom: 5px;\n}\n\n.welcome-message {\n  font-size: 12px;\n  color: #808080;\n}\n\n.search-container {\n  display: flex;\n  align-items: center;\n  margin-left: 20px; /* Space between the search container and heading */\n}\n\n.search-input-wrapper {\n  position: relative;\n}\n\n.search-icon {\n  position: absolute;\n  left: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  font-size: 18px;\n  color: #aaa;\n}\n\n.search-input {\n  width: 300px;\n  padding: 10px 15px 10px 35px;\n  font-size: 16px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  background-color: #f0f0f0;\n}\n\n.add-bug-button {\n  display: flex;\n  align-items: center;\n  margin-left: 20px;\n  padding: 10px 15px;\n  font-size: 16px;\n  color: #fff;\n  background-color: #007bff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.add-bug-button:hover {\n  background-color: #0056b3;\n}\n\n.plus-sign {\n  margin-right: 8px;\n  font-weight: bold;\n}\n\n.manage-dropdown,\n.sort-dropdown {\n  margin-left: 20px;\n  padding: 10px 15px;\n  font-size: 16px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  background-color: #fff;\n  cursor: pointer;\n}\n\n.logo-icon {\n  margin-left: 10px;\n  height: 50px;\n}\n\n.multiple-projects-container {\n  margin-top: 20px;\n}\n\n.project-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 20px;\n}\n\n.grid-row {\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n}\n\n.grid-column {\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n}\n\n.pagination-controls {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n}\n\n.pagination-controls button {\n  padding: 5px 10px;\n}\n</style>\n"],"mappings":";AAwDA,OAAOA,aAAY,MAAO,qBAAqB;AAE/C,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MAAE;MACdC,WAAW,EAAE,EAAE;MAAE;MACjBC,WAAW,EAAE,CAAC;MAAE;MAChBC,eAAe,EAAE,CAAC,CAAE;IACtB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACP,QAAQ,CAACQ,MAAK,GAAI,IAAI,CAACL,eAAe,CAAC;IAC/D,CAAC;IACDM,iBAAiBA,CAAA,EAAG;MAClB,MAAMC,UAAS,GAAI,CAAC,IAAI,CAACR,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC,eAAe;MAChE,MAAMQ,QAAO,GAAID,UAAS,GAAI,IAAI,CAACP,eAAe;MAClD,OAAO,IAAI,CAACH,QAAQ,CAACY,KAAK,CAACF,UAAU,EAAEC,QAAQ,CAAC;IAClD;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACf,MAAMC,KAAI,GAAI,IAAI,CAACd,WAAW,CAACe,IAAI,CAAC,CAAC;MACrC,IAAID,KAAK,EAAE;QACTE,KAAK,CAAC,8DAA8DC,kBAAkB,CAACH,KAAK,CAAC,EAAE,EAC5FI,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAACpB,IAAG,IAAK;UACZuB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAExB,IAAI,CAAC;UACpC,IAAI,CAACC,QAAO,GAAID,IAAI,EAAE;UACtB,IAAI,CAACG,WAAU,GAAI,CAAC,EAAE;QACxB,CAAC,EACAsB,KAAK,CAACC,KAAI,IAAK;UACdH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACnD,CAAC,CAAC;MACN,OAAO;QACL;QACA,IAAI,CAACC,gBAAgB,CAAC,CAAC;MACzB;IACF,CAAC;IACDA,gBAAgBA,CAAA,EAAG;MACjBT,KAAK,CAAC,6CAA6C,EAChDE,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAACpB,IAAG,IAAK;QACZuB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAExB,IAAI,CAAC;QACnC,IAAI,CAACC,QAAO,GAAID,IAAI,EAAE;QACtB,IAAI,CAACG,WAAU,GAAI,CAAC,EAAE;MACxB,CAAC,EACAsB,KAAK,CAACC,KAAI,IAAK;QACdH,OAAO,CAACG,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD,CAAC,CAAC;IACN,CAAC;IACDE,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACzB,WAAU,GAAI,CAAC,EAAE;QACxB,IAAI,CAACA,WAAW,EAAE;MACpB;IACF,CAAC;IACD0B,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAAC1B,WAAU,GAAI,IAAI,CAACG,UAAU,EAAE;QACtC,IAAI,CAACH,WAAW,EAAE;MACpB;IACF,CAAC;IACD2B,kBAAkBA,CAACC,SAAS,EAAE;MAC9B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEnC,IAAI,EAAE,SAAS;QAAEoC,MAAM,EAAE;UAAEH;QAAU;MAAE,CAAC,CAAC;IAC/D;EACA,CAAC;EACDI,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACR,gBAAgB,CAAC,CAAC;EACzB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}