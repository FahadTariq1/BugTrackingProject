{"ast":null,"code":"import axios from 'axios';\n\n// Set up the base URL and axios instance without default headers\nconst API_BASE_URL = 'http://localhost:8000';\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL\n});\n\n// Add a request interceptor to include the Authorization header\napiClient.interceptors.request.use(config => {\n  const authToken = localStorage.getItem('authToken');\n  if (authToken) {\n    config.headers.Authorization = `Bearer ${authToken}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport const fetchAllProjects = async (page = 1, pageSize = 6, description_search = '') => {\n  try {\n    const response = await apiClient.get(`/project/all/?page=${page}&page_size=${pageSize}&description_search=${description_search}`);\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching projects data:', error);\n    throw error;\n  }\n};\n\n// API call for searching bugs\nexport const searchBugs = async (description, project_id) => {\n  try {\n    const response = await apiClient.get('bugs/search/', {\n      params: {\n        description,\n        project_id\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error searching bugs:', error);\n    throw error;\n  }\n};\n\n// API call for updating bug status\nexport const updateBugStatus = async (bugId, status) => {\n  try {\n    await apiClient.patch(`bugs/update/${bugId}/`, {\n      status: status\n    });\n    console.log(`Bug ${bugId} status changed to ${status}.`);\n    return true;\n  } catch (error) {\n    console.error(`Error updating bug ${bugId} status to ${status}:`, error);\n    return false;\n  }\n};\n\n// API call for deleting a bug\nexport const deleteBug = async bugId => {\n  try {\n    await apiClient.patch(`/bugs/delete/${bugId}/`, {\n      bug_type: 'delete'\n    });\n    console.log(`Bug ${bugId} marked as deleted.`);\n    return true;\n  } catch (error) {\n    console.error(`Error deleting bug ${bugId}:`, error);\n    return false;\n  }\n};\n\n// API call for creating the project\nexport const createProject = async formData => {\n  try {\n    const response = await apiClient.post('/project/create/', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error creating project:', error);\n    throw error;\n  }\n};\nexport const fetchDevelopers = async () => {\n  try {\n    const response = await apiClient.get('/auth/all-developers/');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching developers:', error);\n    throw error;\n  }\n};\n\n// API call for creating a new bug\nexport const createBug = async formData => {\n  try {\n    const response = await apiClient.post('/bugs/create/', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error creating bug:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","apiClient","create","baseURL","interceptors","request","use","config","authToken","localStorage","getItem","headers","Authorization","error","Promise","reject","fetchAllProjects","page","pageSize","description_search","response","get","console","log","data","searchBugs","description","project_id","params","updateBugStatus","bugId","status","patch","deleteBug","bug_type","createProject","formData","post","fetchDevelopers","createBug"],"sources":["/home/ali/BugTrackerProject/BugTrackerProject2/BugTrackingProjectBackend/Frontend/bugtrackingfrontend/src/servicesfile/service.js"],"sourcesContent":["import axios from 'axios';\n\n// Set up the base URL and axios instance without default headers\nconst API_BASE_URL = 'http://localhost:8000';\n\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n});\n\n// Add a request interceptor to include the Authorization header\napiClient.interceptors.request.use(\n  (config) => {\n    const authToken = localStorage.getItem('authToken');\n    if (authToken) {\n      config.headers.Authorization = `Bearer ${authToken}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport const fetchAllProjects = async (page = 1, pageSize = 6, description_search = '') => {\n  try {\n    const response = await apiClient.get(`/project/all/?page=${page}&page_size=${pageSize}&description_search=${description_search}`);\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching projects data:', error);\n    throw error;\n  }\n};\n\n// API call for searching bugs\nexport const searchBugs = async (description, project_id) => {\n  try {\n    const response = await apiClient.get('bugs/search/', {\n      params: {\n        description,\n        project_id,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error searching bugs:', error);\n    throw error;\n  }\n};\n\n// API call for updating bug status\nexport const updateBugStatus = async (bugId, status) => {\n  try {\n    await apiClient.patch(`bugs/update/${bugId}/`, {\n      status: status,\n    });\n    console.log(`Bug ${bugId} status changed to ${status}.`);\n    return true;\n  } catch (error) {\n    console.error(`Error updating bug ${bugId} status to ${status}:`, error);\n    return false;\n  }\n};\n\n// API call for deleting a bug\nexport const deleteBug = async (bugId) => {\n  try {\n    await apiClient.patch(`/bugs/delete/${bugId}/`, {\n      bug_type: 'delete',\n    });\n    console.log(`Bug ${bugId} marked as deleted.`);\n    return true;\n  } catch (error) {\n    console.error(`Error deleting bug ${bugId}:`, error);\n    return false;\n  }\n};\n\n// API call for creating the project\nexport const createProject = async (formData) => {\n  try {\n    const response = await apiClient.post('/project/create/', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error creating project:', error);\n    throw error;\n  }\n};\n\nexport const fetchDevelopers = async () => {\n  try {\n    const response = await apiClient.get('/auth/all-developers/');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching developers:', error);\n    throw error;\n  }\n};\n\n// API call for creating a new bug\nexport const createBug = async (formData) => {\n  try {\n    const response = await apiClient.post('/bugs/create/', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error creating bug:', error);\n    throw error;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}