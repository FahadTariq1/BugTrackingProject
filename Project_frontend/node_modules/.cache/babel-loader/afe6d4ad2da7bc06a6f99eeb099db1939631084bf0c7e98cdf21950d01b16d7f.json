{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'PopUpNewTask',\n  props: {\n    isVisible: {\n      type: Boolean,\n      required: true\n    }\n  },\n  data() {\n    return {\n      developers: [],\n      selectedDeveloper: null,\n      dueDate: '',\n      // Add due date property\n      title: '' // Add title property\n    };\n  },\n  methods: {\n    closeModal() {\n      this.$emit('update:isVisible', false);\n    },\n    async fetchDevelopers() {\n      try {\n        const response = await axios.get('http://localhost:8000/BugUsers/developers/');\n        this.developers = response.data;\n        console.log(this.developers); // Debugging to see the fetched data\n      } catch (error) {\n        console.error('Error fetching developers:', error);\n      }\n    },\n    onDeveloperChange() {\n      console.log('Selected developer ID:', this.selectedDeveloper);\n      // Handle developer selection if needed\n    }\n  },\n  watch: {\n    isVisible(newVal) {\n      if (newVal) {\n        this.fetchDevelopers();\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","isVisible","type","Boolean","required","data","developers","selectedDeveloper","dueDate","title","methods","closeModal","$emit","fetchDevelopers","response","get","console","log","error","onDeveloperChange","watch","newVal"],"sources":["/home/ali/BugTrackerProject/Frontend/bugtrackingfrontend/src/components/PopUpNewTask.vue"],"sourcesContent":["<template>\n    <div class=\"modal\" v-if=\"isVisible\">\n      <div class=\"modal-content\">\n        <span class=\"close\" @click=\"closeModal\">&times;</span>\n        <div class=\"topheadergray\">\n          <div class=\"header-content\">\n            <h2>Add new bug</h2>\n            <i class=\"fas fa-ellipsis-h\"></i> <!-- Ellipsis icon -->\n          </div>\n        </div>\n        <hr>\n        <div class=\"form-container\">\n          <div class=\"assign-container\">\n            <p class=\"assign-text\">Assign to</p>\n            <!-- Dropdown menu -->\n            <div class=\"dropdown\">\n              <select v-model=\"selectedDeveloper\" @change=\"onDeveloperChange\">\n                <option value=\"\" disabled>Select Developer</option>\n                <option v-for=\"developer in developers\" :key=\"developer.id\" :value=\"developer.id\">\n                  {{ developer.user_name }}\n                </option>\n              </select>\n            </div>\n          </div>\n          <!-- Due Date -->\n          <div class=\"due-date-container\">\n            <p class=\"due-date-text\">Add Due Date</p>\n            <input type=\"date\" v-model=\"dueDate\" />\n          </div>\n          <div class=\"title-container\">\n            <input type=\"text\" v-model=\"title\" placeholder=\"Add title here\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  <script>\n  import axios from 'axios';\n  \n  export default {\n    name: 'PopUpNewTask',\n    props: {\n      isVisible: {\n        type: Boolean,\n        required: true\n      }\n    },\n    data() {\n      return {\n        developers: [],\n        selectedDeveloper: null,\n        dueDate: '',  // Add due date property\n        title: ''     // Add title property\n      };\n    },\n    methods: {\n      closeModal() {\n        this.$emit('update:isVisible', false);\n      },\n      async fetchDevelopers() {\n        try {\n          const response = await axios.get('http://localhost:8000/BugUsers/developers/');\n          this.developers = response.data;\n          console.log(this.developers); // Debugging to see the fetched data\n        } catch (error) {\n          console.error('Error fetching developers:', error);\n        }\n      },\n      onDeveloperChange() {\n        console.log('Selected developer ID:', this.selectedDeveloper);\n        // Handle developer selection if needed\n      }\n    },\n    watch: {\n      isVisible(newVal) {\n        if (newVal) {\n          this.fetchDevelopers();\n        }\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 5px;\n  width: 50%;\n  max-width: 600px;\n  position: relative;\n  min-width: 50%;\n  min-height: 90%;\n}\n\n.close {\n  border: 2px solid black;\n  background-color: black;\n  color: white;\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 30px;\n  cursor: pointer;\n}\n\n.topheadergray {\n  margin-top: 20px;\n  border-radius: 5px 5px 0 0;\n  margin-bottom: 10px;\n  position: relative; /* Ensure the ellipsis icon can be positioned absolutely */\n}\n\n.header-content {\n  display: flex;\n  align-items: center;\n  justify-content: space-between; /* Space out content to push ellipsis to the end */\n}\n\n.header-content i {\n  font-size: 20px; /* Adjust size of the ellipsis icon */\n  color: gray; /* Color of the ellipsis icon */\n  margin-left: auto; /* Pushes the ellipsis icon to the end */\n}\n\nhr {\n  border: 0;\n  height: 1px;\n  background: gray; /* Color of the line */\n  width: 100vw; /* Full width of the viewport */\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%); /* Center the line horizontally */\n  top: 100px; /* Adjust the top value to position the line as needed */\n}\n\n.form-container {\n  margin-top: 10px;\n}\n\n.assign-container {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px; /* Space between the dropdown and due date */\n  gap: 10px; /* Space between the dropdown and due date */\n}\n\n.assign-text {\n  margin-right: 10px; /* Space between the text and dropdown */\n}\n\n.dropdown {\n  flex-shrink: 0; /* Prevent the dropdown from shrinking */\n}\n\nselect {\n  padding: 5px;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n  font-size: 14px; /* Adjust font size */\n  width: 150px; /* Decrease width */\n}\n\n.due-date-container {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px; /* Space between the due date and title */\n}\n\n.due-date-text {\n  margin-right: 10px; /* Space between the text and date input */\n}\n\ninput[type=\"date\"] {\n  padding: 5px;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n  font-size: 14px; /* Adjust font size */\n}\n\n.title-container {\n  display: flex;\n  align-items: center;\n}\n\ninput[type=\"text\"] {\n  padding: 10px; /* Increase padding to make input taller */\n  border-radius: 5px;\n  font-size: 16px; /* Increase font size for better readability */\n  width: 100%; /* Full width of the container */\n  box-sizing: border-box; /* Ensure padding is included in width */\n}\n\n/* Placeholder styling */\ninput[type=\"text\"]::placeholder {\n  font-size: 2em; /* Size of the placeholder text */\n  color: #aaa; /* Color of the placeholder text */\n}\n</style>\n"],"mappings":"AAqCE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,OAAO;MACbC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,iBAAiB,EAAE,IAAI;MACvBC,OAAO,EAAE,EAAE;MAAG;MACdC,KAAK,EAAE,EAAC,CAAM;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACC,KAAK,CAAC,kBAAkB,EAAE,KAAK,CAAC;IACvC,CAAC;IACD,MAAMC,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMhB,KAAK,CAACiB,GAAG,CAAC,4CAA4C,CAAC;QAC9E,IAAI,CAACT,UAAS,GAAIQ,QAAQ,CAACT,IAAI;QAC/BW,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,UAAU,CAAC,EAAE;MAChC,EAAE,OAAOY,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACDC,iBAAiBA,CAAA,EAAG;MAClBH,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE,IAAI,CAACV,iBAAiB,CAAC;MAC7D;IACF;EACF,CAAC;EACDa,KAAK,EAAE;IACLnB,SAASA,CAACoB,MAAM,EAAE;MAChB,IAAIA,MAAM,EAAE;QACV,IAAI,CAACR,eAAe,CAAC,CAAC;MACxB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}