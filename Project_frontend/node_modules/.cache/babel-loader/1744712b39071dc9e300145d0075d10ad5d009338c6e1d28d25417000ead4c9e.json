{"ast":null,"code":"import axios from 'axios';\n\n// Create an Axios instance with default settings\nconst apiClient = axios.create({\n  baseURL: 'http://localhost:8000'\n});\n\n// Add a request interceptor to include the token in the headers\napiClient.interceptors.request.use(config => {\n  // Get the token from local storage\n  const token = localStorage.getItem('authToken');\n  console.log('authToken', token);\n  // If token exists, add it to the request headers\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Function to fetch all projects\nexport const fetchAllProjects = async () => {\n  try {\n    const response = await apiClient.get('/Projects/allprojects/');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching projects data:', error);\n    throw error;\n  }\n};\n\n// Function to search projects\nexport const searchProjects = async query => {\n  try {\n    const response = await apiClient.get('/Projects/searchproject/', {\n      params: {\n        project_name: query\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error searching projects:', error);\n    throw error;\n  }\n};\n\n// Function to search bugs\nexport const searchBugs = async (bug_description, bug_project_id) => {\n  try {\n    const response = await apiClient.get('/Bugs/searchbug/', {\n      params: {\n        bug_description,\n        bug_project_id\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error searching bugs:', error);\n    throw error;\n  }\n};\n\n// Function to update bug status\nexport const updateBugStatus = async (bugId, status) => {\n  try {\n    await apiClient.patch(`/Bugs/update/${bugId}/`, {\n      bug_type: status\n    });\n    console.log(`Bug ${bugId} status changed to ${status}.`);\n    return true;\n  } catch (error) {\n    console.error(`Error updating bug ${bugId} status to ${status}:`, error);\n    return false;\n  }\n};\n\n// Function to delete bug\nexport const deleteBug = async bugId => {\n  try {\n    await apiClient.patch(`/Bugs/update/${bugId}/`, {\n      bug_type: 'Deleted'\n    });\n    console.log(`Bug ${bugId} marked as deleted.`);\n    return true;\n  } catch (error) {\n    console.error(`Error deleting bug ${bugId}:`, error);\n    return false;\n  }\n};","map":{"version":3,"names":["axios","apiClient","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","console","log","headers","Authorization","error","Promise","reject","fetchAllProjects","response","get","data","searchProjects","query","params","project_name","searchBugs","bug_description","bug_project_id","updateBugStatus","bugId","status","patch","bug_type","deleteBug"],"sources":["/home/ali/BugTrackerProject/Frontend/bugtrackingfrontend/src/servicesfile/service.js"],"sourcesContent":["import axios from 'axios';\n\n// Create an Axios instance with default settings\nconst apiClient = axios.create({\n  baseURL: 'http://localhost:8000',\n});\n\n// Add a request interceptor to include the token in the headers\napiClient.interceptors.request.use(\n  config => {\n    // Get the token from local storage\n    const token = localStorage.getItem('authToken');\n    console.log('authToken',token)\n    // If token exists, add it to the request headers\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\n// Function to fetch all projects\nexport const fetchAllProjects = async () => {\n  try {\n    const response = await apiClient.get('/Projects/allprojects/');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching projects data:', error);\n    throw error;\n  }\n};\n\n// Function to search projects\nexport const searchProjects = async (query) => {\n  try {\n    const response = await apiClient.get('/Projects/searchproject/', {\n      params: { project_name: query }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error searching projects:', error);\n    throw error;\n  }\n};\n\n// Function to search bugs\nexport const searchBugs = async (bug_description, bug_project_id) => {\n  try {\n    const response = await apiClient.get('/Bugs/searchbug/', {\n      params: { bug_description, bug_project_id }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error searching bugs:', error);\n    throw error;\n  }\n};\n\n// Function to update bug status\nexport const updateBugStatus = async (bugId, status) => {\n  try {\n    await apiClient.patch(`/Bugs/update/${bugId}/`, { bug_type: status });\n    console.log(`Bug ${bugId} status changed to ${status}.`);\n    return true;\n  } catch (error) {\n    console.error(`Error updating bug ${bugId} status to ${status}:`, error);\n    return false;\n  }\n};\n\n// Function to delete bug\nexport const deleteBug = async (bugId) => {\n  try {\n    await apiClient.patch(`/Bugs/update/${bugId}/`, { bug_type: 'Deleted' });\n    console.log(`Bug ${bugId} marked as deleted.`);\n    return true;\n  } catch (error) {\n    console.error(`Error deleting bug ${bugId}:`, error);\n    return false;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}