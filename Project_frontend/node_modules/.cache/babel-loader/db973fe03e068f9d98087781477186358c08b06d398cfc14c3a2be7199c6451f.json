{"ast":null,"code":"import SingleProject from './SingleProject.vue';\nexport default {\n  name: 'MultipleProjects',\n  components: {\n    SingleProject\n  },\n  data() {\n    return {\n      projects: [],\n      // To store the fetched projects\n      currentPage: 1,\n      // To keep track of the current page\n      projectsPerPage: 6 // Number of projects to show per page\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.projects.length / this.projectsPerPage);\n    },\n    paginatedProjects() {\n      const startIndex = (this.currentPage - 1) * this.projectsPerPage;\n      const endIndex = startIndex + this.projectsPerPage;\n      return this.projects.slice(startIndex, endIndex);\n    }\n  },\n  mounted() {\n    // Make an API call to fetch the data\n    fetch('http://localhost:8000/Projects/allprojects/').then(response => response.json()).then(data => {\n      console.log('Projects data:', data);\n      this.projects = data; // Assign the fetched data to projects\n    }).catch(error => {\n      console.error('Error fetching projects data:', error);\n    });\n  },\n  methods: {\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    }\n  }\n};","map":{"version":3,"names":["SingleProject","name","components","data","projects","currentPage","projectsPerPage","computed","totalPages","Math","ceil","length","paginatedProjects","startIndex","endIndex","slice","mounted","fetch","then","response","json","console","log","catch","error","methods","prevPage","nextPage"],"sources":["/home/ali/BugTrackerProject/Frontend/bugtrackingfrontend/src/components/Multipleprojects.vue"],"sourcesContent":["<template>\n  <div class=\"multiple-projects-container\">\n    <div v-if=\"projects.length > 0\" :class=\"projects.length > 6 ? 'grid-row' : 'grid-column'\">\n      <SingleProject\n        v-for=\"(project, index) in paginatedProjects\"\n        :key=\"index\"\n        :project_name=\"project.project_name\"\n        :project_description=\"project.project_description\"\n      />\n    </div>\n    <div v-if=\"projects.length > 6\" class=\"pagination-controls\">\n      <button @click=\"prevPage\" :disabled=\"currentPage === 1\">Previous</button>\n      <span>Page {{ currentPage }} of {{ totalPages }}</span>\n      <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">Next</button>\n    </div>\n  </div>\n</template>\n  \n<script>\nimport SingleProject from './SingleProject.vue';\n\nexport default {\n  name: 'MultipleProjects',\n  components: {\n    SingleProject,\n  },\n  data() {\n    return {\n      projects: [], // To store the fetched projects\n      currentPage: 1, // To keep track of the current page\n      projectsPerPage: 6, // Number of projects to show per page\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.projects.length / this.projectsPerPage);\n    },\n    paginatedProjects() {\n      const startIndex = (this.currentPage - 1) * this.projectsPerPage;\n      const endIndex = startIndex + this.projectsPerPage;\n      return this.projects.slice(startIndex, endIndex);\n    },\n  },\n  mounted() {\n    // Make an API call to fetch the data\n    fetch('http://localhost:8000/Projects/allprojects/')\n      .then(response => response.json())\n      .then(data => {\n        console.log('Projects data:', data);\n        this.projects = data; // Assign the fetched data to projects\n      })\n      .catch(error => {\n        console.error('Error fetching projects data:', error);\n      });\n  },\n  methods: {\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n  },\n};\n</script>\n  \n<style scoped>\n.multiple-projects-container {\n  margin-left: 20px;\n  margin-top: 50px;\n}\n\n.grid-row {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px; /* Adjust spacing between components */\n}\n\n.grid-column {\n  display: flex;\n  flex-direction: column;\n  gap: 20px; /* Adjust spacing between components */\n}\n\n.pagination-controls {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n}\n\n.pagination-controls button {\n  padding: 5px 10px;\n}\n</style>\n"],"mappings":"AAmBA,OAAOA,aAAY,MAAO,qBAAqB;AAE/C,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MAAE;MACdC,WAAW,EAAE,CAAC;MAAE;MAChBC,eAAe,EAAE,CAAC,CAAE;IACtB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACN,QAAQ,CAACO,MAAK,GAAI,IAAI,CAACL,eAAe,CAAC;IAC/D,CAAC;IACDM,iBAAiBA,CAAA,EAAG;MAClB,MAAMC,UAAS,GAAI,CAAC,IAAI,CAACR,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC,eAAe;MAChE,MAAMQ,QAAO,GAAID,UAAS,GAAI,IAAI,CAACP,eAAe;MAClD,OAAO,IAAI,CAACF,QAAQ,CAACW,KAAK,CAACF,UAAU,EAAEC,QAAQ,CAAC;IAClD;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR;IACAC,KAAK,CAAC,6CAA6C,EAChDC,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAACf,IAAG,IAAK;MACZkB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEnB,IAAI,CAAC;MACnC,IAAI,CAACC,QAAO,GAAID,IAAI,EAAE;IACxB,CAAC,EACAoB,KAAK,CAACC,KAAI,IAAK;MACdH,OAAO,CAACG,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,CAAC;EACN,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACrB,WAAU,GAAI,CAAC,EAAE;QACxB,IAAI,CAACA,WAAW,EAAE;MACpB;IACF,CAAC;IACDsB,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACtB,WAAU,GAAI,IAAI,CAACG,UAAU,EAAE;QACtC,IAAI,CAACH,WAAW,EAAE;MACpB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}