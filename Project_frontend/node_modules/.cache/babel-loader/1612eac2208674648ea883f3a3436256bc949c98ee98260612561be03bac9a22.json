{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../assets/Images/Videoicon.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-9c9b7d9e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"single-project-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"project-image\",\n  src: _imports_0,\n  alt: \"Project Icon\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"heading-project\"\n};\nconst _hoisted_4 = {\n  class: \"description-project\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"task-done\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", null, \"Task done : \"), /*#__PURE__*/_createTextVNode(), /*#__PURE__*/_createElementVNode(\"b\", null, \"02/56\")], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"b\", null, _toDisplayString($props.project_name), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"span\", null, _toDisplayString($options.truncatedDescription), 1 /* TEXT */)]), _hoisted_5]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementVNode","src","alt","_createTextVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$props","project_name","_hoisted_4","$options","truncatedDescription","_hoisted_5"],"sources":["/home/ali/BugTrackerProject/Frontend/bugtrackingfrontend/src/components/SingleProject.vue"],"sourcesContent":["<template>\n  <div class=\"single-project-container\">\n      <img class=\"project-image\" src=\"../assets/Images/Videoicon.png\" alt=\"Project Icon\">\n      <div class=\"heading-project\">\n          <b>{{ project_name }}</b>\n      </div>\n      <div class=\"description-project\">\n          <span>{{ truncatedDescription }}</span>\n      </div>\n      <div class=\"task-done\"><span>Task done : </span> <b>02/56</b></div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'SingleProject',\n  props: {\n    project_name: {\n      type: String,\n      required: true,\n    },\n    project_description: {\n      type: String,\n      required: true,\n    },\n  },\n  computed: {\n    truncatedDescription() {\n      return this.project_description.length > 27\n        ? this.project_description.slice(0, 27) + '...'\n        : this.project_description;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.single-project-container {\n  background-color: white; /* Set background color to white */\n  padding: 20px; /* Optional: Add padding for spacing inside the container */\n  border-radius: 8px; /* Optional: Add rounded corners */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Optional: Add shadow for a subtle 3D effect */\n  width: 340px; /* Set a fixed width for the container */\n}\n\n.project-image {\n  width: 50px; /* Adjust the width as needed */\n  height: auto; /* Maintain aspect ratio */\n}\n\n.heading-project {\n  padding-top: 10px;\n}\n\n.description-project {\n  padding-top: 10px;\n}\n\n.task-done {\n  padding-top: 10px;\n}\n\nspan {\n  color: gray;\n}\n</style>\n"],"mappings":";OAEiCA,UAAoC;;;EAD9DC,KAAK,EAAC;AAA0B;gEACjCC,mBAAA,CAAmF;EAA9ED,KAAK,EAAC,eAAe;EAACE,GAAoC,EAApCH,UAAoC;EAACI,GAAG,EAAC;;;EAC/DH,KAAK,EAAC;AAAiB;;EAGvBA,KAAK,EAAC;AAAqB;gEAGhCC,mBAAA,CAAmE;EAA9DD,KAAK,EAAC;AAAW,I,aAACC,mBAAA,CAAyB,cAAnB,cAAY,G,aAT/CG,gBAAA,I,aASuDH,mBAAA,CAAY,WAAT,OAAK,E;;uBAR7DI,mBAAA,CASM,OATNC,UASM,GARFC,UAAmF,EACnFN,mBAAA,CAEM,OAFNO,UAEM,GADFP,mBAAA,CAAyB,WAAAQ,gBAAA,CAAnBC,MAAA,CAAAC,YAAY,iB,GAEtBV,mBAAA,CAEM,OAFNW,UAEM,GADFX,mBAAA,CAAuC,cAAAQ,gBAAA,CAA9BI,QAAA,CAAAC,oBAAoB,iB,GAEjCC,UAAmE,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}